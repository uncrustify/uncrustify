{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"im",
				"img	HTML - Image"
			],
			[
				"chunk",
				"chunk_get_prev"
			],
			[
				"CT_A",
				"CT_ADDR"
			],
			[
				"_conf",
				"_configExample"
			],
			[
				"TARGET",
				"TARGET_TEMP_DIR"
			],
			[
				"DOCS",
				"DOCSET_PROJECT_NAME"
			],
			[
				"PATH",
				"PATH_SEARCH"
			],
			[
				"DOC",
				"DOCSET_PROJECT_NAME"
			],
			[
				"TMP",
				"TMP_PATH_DOXY_DOCSET"
			],
			[
				"PATH_S",
				"PATH_SEARCH"
			],
			[
				"PATH_M",
				"PATH_MAKE"
			],
			[
				"DOXY",
				"DOXY_OUTPUT_DIR"
			],
			[
				"_pod",
				"_podspecVersion"
			],
			[
				"showP",
				"showPodspec"
			],
			[
				"FET",
				"cli_FETCHINFO"
			],
			[
				"cli_BUI",
				"cli_BUILDVER"
			],
			[
				"PODSP",
				"PODSPEC_TAG"
			],
			[
				"PODS",
				"PODSPEC_SOURCE"
			],
			[
				"find",
				"findPodspec"
			],
			[
				"cli_POD",
				"cli_PODSPECURL"
			],
			[
				"POD",
				"PODSPEC_BRANCH_REL"
			],
			[
				"UPAT",
				"UPDATEPODSPEC"
			],
			[
				"BUILDVER",
				"BUILDVER_START"
			],
			[
				"cli_EM",
				"cli_EMPTYPREFIX"
			],
			[
				"_arg",
				"_argVarName"
			],
			[
				"_argVar",
				"_argVarValue"
			],
			[
				"TA",
				"TAG_PREFIX"
			],
			[
				"PATH_G",
				"PATH_GREP"
			],
			[
				"GI",
				"GIT_COMMIT_HASH"
			],
			[
				"BUI",
				"BUILDVER"
			],
			[
				"GIT_",
				"GIT_CURRENT_BRANCH"
			],
			[
				"GIT",
				"GIT_COMMIT_TAG"
			],
			[
				"CF",
				"CFBundleShortVersionString"
			],
			[
				"check",
				"git-ref-check-format"
			],
			[
				"isSem",
				"isSemverArgArray"
			],
			[
				"BUILD",
				"BUILDNUM"
			],
			[
				"BUILDNU",
				"BUILDNUM_START"
			],
			[
				"cli",
				"cli_CONFIGPATH"
			],
			[
				"password",
				"password_confirmation"
			],
			[
				"grayLight",
				"grayLighter"
			],
			[
				"redir",
				"redirect_to"
			],
			[
				"sign",
				"signin_path"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/token_enum.h",
			"settings":
			{
				"buffer_size": 12088,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/config/meiss_codewidth_fix.cfg",
			"settings":
			{
				"buffer_size": 5008,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Last login: Mon Jun  2 13:46:05 on ttys010\n\nmark@odette::~/Library/Application Support/Developer/Shared/Xcode/Plug-ins/UncrustifyPlugin.xcplugin/Contents/Resources\n$ history\n    1  git flow release finish 3.0.0\n    2  git lg\n    3  cd ..\n    4  rm -rf PDFReader_BAK\n    5  cp -Rp PDFReader PDFReader_BAK\n    6  cd PDFReader\n    7  xcodebump -i\n    8  xcodebump -r -e -u -b 4 3.0.0\n    9  git flow release finish 3.0.0\n   10  git flow release start 3.0.0\n   11  git flow release finish 3.0.0\n   12  git log\n   13  git lg\n   14  cat PDFReader.podspec \n   15  ls -la\n   16  ls -la ../\n   17  cd ../PDFReader_BAK/\n   18  ls -la\n   19  git tag\n   20  cd ..\n   21  ls -la\n   22  rm -rf PDFReader\n   23  cp -Rp  PDFReader_BAK PDFReader\n   24  cd PDFReader\n   25  ls -la\n   26  subl PDFReader.podspec \n   27  git status\n   28  git add .\n   29  git commit -m \"Updated podspec.\"\n   30  git status\n   31  xcodebump -r -e -u -b 4 3.0.0\n   32  git flow release start 3.0.0\n   33  git flow release finish 3.0.0\n   34  git status\n   35  git lg\n   36  git push origin --all\n   37  git push --tags\n   38  pwd\n   39  history | grep flow\n   40  git flow feature start refactor-PDFReaderDocument\n   41  subl .clang-format \n   42  subl ~/.uncrustify/uncrustify.cfg \n   43  cp ~/dev/Xcode_Plugins/BBUncrustifyPlugin-Xcode/.uncrustify.cfg .\n   44  subl .uncrustify.cfg \n   45  opendiff ~/.uncrustify/uncrustify.cfg .uncrustify.cfg \n   46  pwd\n   47  ls -la\n   48  opendiff ~/.uncrustify/uncrustify.cfg .uncrustify.cfg \n   49  cp .uncrustify.cfg ~/.uncrustify/uncrustify.cfg \n   50  subl ~/.uncrustify/uncrustify.cfg \n   51  subl README.md \n   52  subl README.md \n   53  git status\n   54  diff .uncrustify.cfg ../../objective-c-style-guide/.uncrustify.cfg \n   55  history | grep uncrust\n   56  diff .uncrustify.cfg ../../objective-c-style-guide/.uncrustify.cfg \n   57  cp ../../objective-c-style-guide/.uncrustify.cfg .uncrustify.cfg \n   58  ls -la\n   59  git status\n   60  ls -la\n   61  ls -la ../\n   62  git tag\n   63  opendiff\n   64  ls -la\n   65  opendiff .uncrustify.cfg .xcodebump.cfg \n   66  subl ~/.gitconfig \n   67  git status\n   68  git diff .uncrustify.cfg \n   69  git diff README.md \n   70  git difftool README.md \n   71  cd ..\n   72  cd PDFReader\n   73  git diff README.md \n   74  git status\n   75  cd encrypted/\n   76  gpg -d bookmarks.txt.asc \n   77  cd encrypted/\n   78  gpg -d bookmarks.txt.asc \n   79  cd encrypted/\n   80  whois bunkerfive.com\n   81  whois bunkerfour.com\n   82  whois bunkersix.com\n   83  whois bunkerseven.com\n   84  whois bunkerone.com\n   85  whois bunkerfive.com\n   86  whois bunkertwo.com\n   87  cd encrypted/\n   88  gpg -d bookmarks.txt.asc \n   89  gpg -d bookmarks.txt.asc > bookmarks.txt\n   90  vi bookmarks.txt\n   91  gpg -ea bookmarks.txt\n   92  gpg -d bookmarks.txt.asc \n   93  rm bookmarks.txt\n   94  exit\n   95  whois fuze.com\n   96  whois b5.com\n   97  cd ../\n   98  ls -la\n   99  mkdir TEST\n  100  cd TEST\n  101  git clone https://github.com/bengardner/uncrustify.git\n  102  cd uncrustify/\n  103  ls -la\n  104  cat .git/config \n  105  git flow init\n  106  cd ..\n  107  cd ..\n  108  rm -rf TEST\n  109  ls -la\n  110  cd ../../IOS/\n  111  ls -la\n  112  cd PDFReader\n  113  git remote -v\n  114  git remote add upstream git://github.com/bengardner/uncrustify.git\n  115  cd ../../IOS\n  116  cd ../\n  117  mkdir TEST\n  118  cd TEST/\n  119  https://github.com/bengardner/uncrustify.git\n  120  git clone https://github.com/bengardner/uncrustify.git\n  121  cd uncrustify/\n  122  git branch\n  123  cat .git/config \n  124  git flow init\n  125  cd ..\n  126  rm -rf uncrustify/\n  127  git clone git@github.com:markeissler/uncrustify.git\n  128  cd uncrustify/\n  129  cat .git/config \n  130  git flow init\n  131  git branch\n  132  cd ../../\n  133  cd ../IOS/\n  134  cd PDFReader\n  135  git remote -v\n  136  cd ~/dev/OSX/\n  137  rm -rf TEST\n  138  cd ..\n  139  brew tap\n  140  cd encrypted/\n  141  gpg -d bookmarks.txt.asc \n  142  df\n  143  sudo umount /Volumes/mark.eissler \n  144  df\n  145  uptime\n  146  exit\n  147  gdb --interpreter=mi src/uncrustify\n  148  gdb src/uncrustify\n  149  man gdb\n  150  gdb -h\n  151  man gdb\n  152  cd ..\n  153  cp -Rp uncrustify uncrustify_BAK2\n  154  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/\n  155  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Installed\\ Packages/\n  156  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/\n  157  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/User/\n  158  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/\n  159  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Backup/\n  160  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Cache/\n  161  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/\n  162  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Local/\n  163  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/\n  164  cd encrypted/\n  165  gpg -d bookmarks.txt.asc \n  166  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/\n  167  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/User/\n  168  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/\n  169  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Installed\\ Packages/\n  170  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/\n  171  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/\n  172  ls -la ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/User/\n  173  find  ~/Library/Application\\ Support/Sublime\\ Text\\ 3/ -type f -name '*keymap*' -print\n  174  which gdb\n  175  man gdb\n  176  history\n  177  cd ~/dev/OSX/uncrustify\n  178  ls -la\n  179  lldb src/uncrustify\n  180  make clean; make\n  181  history\n  182  cd encrypted/\n  183  ping news.ycombinator.com\n  184  telnet news.ycombinator.com 80\n  185  exit\n  186  netstat\n  187  netstat -n\n  188  clear\n  189  netstat -n\n  190  cd en\n  191  cd ~/encrypted/\n  192  gpg -d my_passwords.txt.asc  | less\n  193  src/uncrustify -p -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  194  src/uncrustify \n  195  src/uncrustify -p dump.out -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  196  subl dump.out \n  197  make clean; make\n  198  src/uncrustify -p dump.out -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  199  make clean; make\n  200  src/uncrustify -p dump.out -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  201  src/uncrustify | grep log\n  202  ls -la\n  203  ls -la src/\n  204  src/uncrustify -L5 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  205  ls -la\n  206  ls -la src/\n  207  ls -la\n  208  ls -la /var/log\n  209  tail /var/log/system.log\n  210  ls -la\n  211  grep log *\n  212  src/uncrustify \n  213  src/uncrustify -L0-5 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  214  src/uncrustify -L0-5,20-23,51 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  215  src/uncrustify -L0-5,25 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  216  make clean; make\n  217  src/uncrustify -L0-5,25 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  218  make clean; make\n  219  src/uncrustify -L0-5,25 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  220  src/uncrustify -L0-5,25,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  221  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  222  make clean; make\n  223  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  224  make clean; make\n  225  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  226  make clean; make\n  227  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  228  make clean; make\n  229  make clean; make\n  230  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  231  make clean; make\n  232  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  233  make clean; make\n  234  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  235  make clean; make\n  236  make clean; make\n  237  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  238  make clean; make\n  239  make clean; make\n  240  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  241  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  242  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  243  src/uncrustify -L0-5,25,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  244  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  245  make clean; make\n  246  make clean; make\n  247  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  248  make clean; make\n  249  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  250  make clean; make\n  251  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  252  make clean; make\n  253  make clean; make\n  254  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  255  make clean; make\n  256  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  257  make clean; make\n  258  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  259  make clean; make\n  260  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  261  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  262  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  263  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  264  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  265  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  266  make clean; make\n  267  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  268  make clean; make\n  269  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  270  make clean; make\n  271  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  272  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  273  make clean; make\n  274  make clean; make\n  275  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  276  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  277  make clean; make\n  278  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  279  make clean; make\n  280  make clean; make\n  281  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  282  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  283  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  284  make clean; make\n  285  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  286  make clean; make\n  287  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  288  make clean; make\n  289  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  290  make clean; make\n  291  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  292  make clean; make\n  293  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  294  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  295  src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n  296  ls -la ~/.pow\n  297  ls -la ~/.pow/\n  298  nslookup http://ror-sapp4.lvh.me/\n  299  nslookup http://ror-sapp4.rails.dev\n  300  nslookup ror-sapp4.lvh.me\n  301  subl ~/.powconfig\n  302  touch ~/.pow/restart.txt\n  303  touch ~/.pow/restart.txt\n  304  ls -la /etc/resolv\n  305  ls -la /etc/resolver/\n  306  cat /etc/resolver/lvh.me \n  307  cat /etc/hosts\n  308  vi /etc/hosts\n  309  sudo vi /etc/hosts\n  310  nslookup rails-sapp4.lvh.me\n  311  touch ~/.pow/restart.txt\n  312  touch ~/.pow/restart.txt\n  313  sudo killall -HUP mDNSResponder\n  314  cat /etc/hosts\n  315  ls -la /etc/resolver/\n  316  ls -la ~/.pow/\n  317  cd ~/.pow\n  318  ls -la\n  319  ln -s /Users/mark/dev/RoR_Tut4/sample_app ror-sapp4\n  320  ls -la\n  321  s -la /etc/resolver/\n  322  ls -la /etc/resolv\n  323  ls -la /etc/resolver/\n  324  ls -la\n  325  touch ~/.pow/restart.txt\n  326  mv ror-sapp4 ror-sapp4.rails\n  327  ls -la\n  328  wget ror-sapp4.rails.dev\n  329  rm index.html \n  330  cat /etc/hosts\n  331  vi /etc/hosts\n  332  sudo vi /etc/hosts\n  333  cat /etc/hosts\n  334  nslookup rails.dev\n  335  nslookup web.dev\n  336  nslookup bla.web.dev\n  337  nslookup lvh.me\n  338  nslookup lvh.me\n  339  nslookup test.lvh.me\n  340  nslookup test.rails.dev\n  341  ls -la /etc/resolver/\n  342  nslookup test.rails\n  343  sudo vi /etc/hosts\n  344  nslookup rails.dev\n  345  sudo killall -HUP mDNSResponder\n  346  nslookup rails.dev\n  347  sudo vi /etc/hosts\n  348  nslookup rails.dev\n  349  sudo killall -HUP mDNSResponder\n  350  nslookup rails.dev\n  351  cat /etc/hosts\n  352  nslookup odette.web-pass.com\n  353  nslookup odette.wa-00.pvt.mixtur.net\n  354  nslookup localhost\n  355  sudo vi /etc/hosts\n  356  nslookup localhost\n  357  nslookup web.dev\n  358  sudo killall -HUP mDNSResponder\n  359  nslookup web.dev\n  360  sudo vi /etc/hosts\n  361  sudo dscacheutil -flushcache\n  362  nslookup web.dev\n  363  sudo vi /etc/hosts\n  364  nslookup test.mixtur.com\n  365  sudo dscacheutil -flushcache\n  366  nslookup test.mixtur.com\n  367  nslookup test.mixtur.com\n  368  sudo vi /etc/hosts\n  369  nslookup test.mixtur.com\n  370  sudo vi /etc/hosts\n  371  nslookup test.mixtur.com\n  372  sudo dscacheutil -flushcache\n  373  nslookup test.mixtur.com\n  374  sudo vi /etc/hosts\n  375  nslookup web.dev\n  376  sudo dscacheutil -flushcache\n  377  nslookup web.dev\n  378  sudo vi /etc/hosts\n  379  nslookup test.mixtur.com\n  380  sudo dscacheutil -flushcache\n  381  nslookup test.mixtur.com\n  382  sudo killall -HUP mDNSResponder\n  383  nslookup test.mixtur.com\n  384  nslookup test.mixtur.com\n  385  nslookup test.mixtur.com\n  386  nslookup test.mixtur.com\n  387  sudo vi /etc/hosts\n  388  cat /private/etc/host\n  389  cat /private/etc/hosts\n  390  sudo vi /etc/hosts\n  391  dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n  392  nslookup test.mixtur.com\n  393  nslookup test.mixtur.com\n  394  sudo vi /etc/hosts\n  395  nslookup test.mixtur.com\n  396  cat /etc/hosts\n  397  ping odette.web-pass.com\n  398  nslookup odette.web-pass.com\n  399  ping rails.dev\n  400  mDNSResponder rails.dev\n  401  mDNSResponder rails.d\n  402  mDNSResponder rails.ddr\n  403  dscacheutil -q host -a name rails.dev\n  404  dscacheutil -q host -a name lvh.me\n  405  ls -la /etc/resolver/\n  406  ls -la /etc/resolver/lvh.me \n  407  cat /etc/resolver/lvh.me \n  408  cat /etc/resolver/rails \n  409  dscacheutil -q host -a name http://ror-sapp4.lvh.me/\n  410  dscacheutil -q host -a name ror-sapp4.lvh.me\n  411  dscacheutil -q host -a name lvh.me\n  412  dscacheutil -q host -a name rails.dev\n  413  sudo vi /etc/hosts\n  414  dscacheutil -q host -a name lvh.me\n  415  dscacheutil -q host -a name ror-sapp4.lvh.me\n  416  ls -la ~/.pow\n  417  ls -la ~/.pow/\n  418  ls -la\n  419  rm ror-sapp4.rails\n  420  ls -la\n  421  cd /etc/resolver/\n  422  ls -la\n  423  mv lvh.me me\n  424  sudo mv lvh.me me\n  425  ls -la\n  426  dscacheutil -q host -a name ror-sapp4.lvh.me\n  427  dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n  428  dscacheutil -q host -a name ror-sapp4.lvh.me\n  429  dscacheutil -q host -a name ror-sapp4.lvh.me\n  430  touch ~/.pow/restart.txt\n  431  dscacheutil -q host -a name ror-sapp4.lvh.me\n  432  dscacheutil -q host -a name ror-sapp4.lvh.me\n  433  dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n  434  dscacheutil -q host -a name ror-sapp4.lvh.me\n  435  cat /etc/hosts\n  436  ls -la /etc/resolver/\n  437  scutil --dns\n  438  touch ~/.pow/restart.txt\n  439  ls -la \n  440  suco mv me me.x\n  441  sudo mv me lvh.me\n  442  ls -la\n  443  cat lvh.me\n  444  dscacheutil -q host -a name ror-sapp4.lvh.me\n  445  dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n  446  dscacheutil -q host -a name ror-sapp4.lvh.me\n  447  dscacheutil -q host -a name lvh.me\n  448  dscacheutil -q host -a name ror-sapp4.lvh.me\n  449  dscacheutil -q host -a name ror-sapp4.dev\n  450  dscacheutil -q host -a name ror-sapp4.rails\n  451  ls -la\n  452  cd ~/.pow/\n  453  ls -la\n  454  ln -s /Users/mark/dev/RoR_Tut4/sample_app rails-sapp4.dev\n  455  ls -la\n  456  touch ~/.pow/restart.txt\n  457  dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n  458  dscacheutil -q host -a name ror-sapp4.dev\n  459  ls -la\n  460  mv rails-sapp4.dev ror-sapp4.dev\n  461  touch ~/.pow/restart.txt\n  462  ls -la\n  463  mv ror-sapp4.dev ror-sapp4.rails.dev\n  464  touch ~/.pow/restart.txt\n  465  mv ror-sapp4.rails.dev ror-sapp4.rails\n  466  touch ~/.pow/restart.txt\n  467  dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n  468  dscacheutil -q host -a name ror-sapp4.rails.dev\n  469  ls -la\n  470  df\n  471  df\n  472  df\n  473  df\n  474  df\n  475  df\n  476  ls -la\n  477  cd /etc/resolver/\n  478  ls -la\n  479  rm lvh.me\n  480  sudo rm lvh.me \n  481  cat /etc/hosts\n  482  sudo vi /etc/hosts\n  483  ls -la\n  484  ssh -l ec2-user -i ~/Documents/Amazon_AWS/my-ec2-key-west.pem \n  485  ssh -l ec2-user -i ~/Documents/Amazon_AWS/my-ec2-key-west.pem ci.favu.co\n  486  cd ~/dev/\n  487  subl bunker5_website/\n  488  ls -la dotfiles/\n  489  cd dotfiles/\n  490  opendiff ~/.powconfig .powconfig \n  491  cp ~/.powconfig .powconfig \n  492  git status\n  493  git add .\n  494  git commit -m \"Updated to remove use of lvh.me. There doesn't seem to be anyway to configure a subdomain and if we just leave .me then we lose visibility to external me domains.\"\n  495  git push oriign\n  496  git push origin\n  497  ls -la  ~/Documents/Amazon_AWS/\n  498  ssh -i  ~/Documents/Amazon_AWS/my-ec2-key-west.pem arc.mixtur.com\n  499  ssh -lec2-user -i  ~/Documents/Amazon_AWS/my-ec2-key-west.pem arc.mixtur.com\n  500  history\n\nmark@odette::~/Library/Application Support/Developer/Shared/Xcode/Plug-ins/UncrustifyPlugin.xcplugin/Contents/Resources\n$ !295\nsrc/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \n-bash: src/uncrustify: No such file or directory\n\nmark@odette::~/Library/Application Support/Developer/Shared/Xcode/Plug-ins/UncrustifyPlugin.xcplugin/Contents/Resources\n$ cd ~/dev/OSX/uncrustify\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 2, col 77 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\nsplit_line: line 12, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 12, col 77 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\nsplit_line: line 14, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 14, col 78 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ rm dump.out \n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\nwidth.cpp:365:12: error: expected ';' after expression\n    && prev->type != CT_ADDR && !chunk_is_star(prev) && !(chunk_is_token(prev, CT_COLON))\n           ^\n           ;\nwidth.cpp:365:5: warning: expression result unused [-Wunused-value]\n    && prev->type != CT_ADDR && !chunk_is_star(prev) && !(chunk_is_token(prev, CT_COLON))\n    ^~~~~~~\nwidth.cpp:365:12: error: expected expression\n    && prev->type != CT_ADDR && !chunk_is_star(prev) && !(chunk_is_token(prev, CT_COLON))\n           ^\nwidth.cpp:365:8: error: use of undeclared label 'prev'\n    && prev->type != CT_ADDR && !chunk_is_star(prev) && !(chunk_is_token(prev, CT_COLON))\n       ^\n1 warning and 3 errors generated.\nmake[2]: *** [uncrustify-width.o] Error 1\nmake[1]: *** [all] Error 2\nmake: *** [all-recursive] Error 1\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\nwidth.cpp:365:80: error: extraneous ')' after condition, expected a statement\n    && prev->type != CT_ADDR && !chunk_is_star(prev) && prev->type != CT_COLON)))\n                                                                               ^\nwidth.cpp:365:81: error: extraneous ')' after condition, expected a statement\n    && prev->type != CT_ADDR && !chunk_is_star(prev) && prev->type != CT_COLON)))\n                                                                                ^\n2 errors generated.\nmake[2]: *** [uncrustify-width.o] Error 1\nmake[1]: *** [all] Error 2\nmake: *** [all-recursive] Error 1\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0)  ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\nsplit_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0)  ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\nsplit_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0)  ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\n ** HERE **\nsplit_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n^[[A  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nSegmentation fault: 11\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nSegmentation fault: 11\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n 'xAxis' [TYPE], started on token 'xAxis' [TYPE]\nsplit_before_chunk: xAxisCenterPoint\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:\n  xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\nwidth.cpp:365:5: warning: '&&' within '||' [-Wlogical-op-parentheses]\n    && (prev->type != CT_ADDR && !chunk_is_star(prev)) || chunk_get_prev(prev)->type != CT_OC_COLON)\n    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~\nwidth.cpp:365:5: note: place parentheses around the '&&' expression to silence this warning\n    && (prev->type != CT_ADDR && !chunk_is_star(prev)) || chunk_get_prev(prev)->type != CT_OC_COLON)\n    ^\n1 warning generated.\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\nwidth.cpp:365:5: warning: '&&' within '||' [-Wlogical-op-parentheses]\n    && (prev->type != CT_ADDR && !chunk_is_star(prev)) || prev->type != CT_OC_COLON)\n    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~\nwidth.cpp:365:5: note: place parentheses around the '&&' expression to silence this warning\n    && (prev->type != CT_ADDR && !chunk_is_star(prev)) || prev->type != CT_OC_COLON)\n    ^\n1 warning generated.\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ make clean; make\nMaking clean in man\nMaking clean in .\nmake[2]: Nothing to be done for `clean-am'.\nMaking clean in src\ntest -z \"uncrustify\" || rm -f uncrustify\ntest -z \"*.o *~ *.bak\" || rm -f *.o *~ *.bak\nrm -f *.o\nMaking clean in .\ntest -z \"*~ *.bak\" || rm -f *~ *.bak\nMaking all in src\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\n  CXX    uncrustify-uncrustify.o\n  CXX    uncrustify-chunk_list.o\n  CXX    uncrustify-indent.o\n  CXX    uncrustify-align.o\n  CXX    uncrustify-combine.o\n  CXX    uncrustify-tokenize.o\n  CXX    uncrustify-tokenize_cleanup.o\n  CXX    uncrustify-space.o\n  CXX    uncrustify-newlines.o\n  CXX    uncrustify-output.o\n  CXX    uncrustify-args.o\n  CXX    uncrustify-options.o\n  CXX    uncrustify-keywords.o\n  CXX    uncrustify-punctuators.o\n  CXX    uncrustify-parse_frame.o\n  CXX    uncrustify-logmask.o\n  CXX    uncrustify-logger.o\n  CXX    uncrustify-ChunkStack.o\n  CXX    uncrustify-braces.o\n  CXX    uncrustify-brace_cleanup.o\n  CXX    uncrustify-align_stack.o\n  CXX    uncrustify-defines.o\n  CXX    uncrustify-width.o\n  CXX    uncrustify-lang_pawn.o\n  CXX    uncrustify-md5.o\n  CXX    uncrustify-backup.o\n  CXX    uncrustify-parens.o\n  CXX    uncrustify-universalindentgui.o\n  CXX    uncrustify-semicolons.o\n  CXX    uncrustify-sorting.o\n  CXX    uncrustify-detect.o\n  CXX    uncrustify-unicode.o\n  CXX    uncrustify-unc_text.o\n  CXX    uncrustify-compat_posix.o\n  CXX    uncrustify-compat_win32.o\n  CXXLD  uncrustify\nMaking all in man\nmake[2]: Nothing to be done for `all-am'.\nmake[1]: Nothing to be done for `all-am'.\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 2, col 77 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\nsplit_line: line 12, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 12, col 77 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\nsplit_line: line 14, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 14, col 78 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 141 token:max[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at max [OC_MSG_NAME]\n 'max' [OC_MSG_NAME], started on token 'max' [OC_MSG_NAME]\nsplit_before_chunk: max\nsplit_line: line 12, col 141 token:max[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at max [OC_MSG_NAME]\n 'max' [OC_MSG_NAME], started on token 'max' [OC_MSG_NAME]\nsplit_before_chunk: max\nsplit_line: line 14, col 141 token:max[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at max [OC_MSG_NAME]\n 'max' [OC_MSG_NAME], started on token 'max' [OC_MSG_NAME]\nsplit_before_chunk: max\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 131 token:&[ADDR] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at & [ADDR]\n ** OC MSG **\nsplit_before_chunk: min\nsplit_line: line 12, col 131 token:&[ADDR] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at & [ADDR]\n ** OC MSG **\nsplit_before_chunk: min\nsplit_line: line 14, col 131 token:&[ADDR] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at & [ADDR]\n ** OC MSG **\nsplit_before_chunk: min\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint\n  min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint\n  min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint\n  min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 2, col 77 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\nsplit_line: line 12, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 12, col 77 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\nsplit_line: line 14, col 74 token:derivative[OC_MSG_NAME] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at derivative [OC_MSG_NAME]\n 'deriv' [OC_MSG_NAME], started on token 'deriv' [OC_MSG_NAME]\nsplit_before_chunk: derivative\nsplit_line: line 14, col 78 token:maxValue[WORD] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at maxValue [WORD]\n ** OC MSG **\nsplit_before_chunk: max\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels\n  derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue\n  max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 16, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 16 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 16, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 16 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 16, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 16 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 16, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 16 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 16, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 16 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *) aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 16, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 16 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\ndo_code_width\nsplit_line: line 2, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 2 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 12, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 12 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 14, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 14 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\nsplit_line: line 16, col 110 token:xAxisCenterPoint[TYPE] (IN_FUNC=0) split_line: TRY_SPLIT yielded NO SOLUTION for line 16 at xAxisCenterPoint [TYPE]\n ** OC MSG **\nsplit_before_chunk: centerAt\ndo_code_width\n- (void)someMethod: (NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative\n  centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\n- (void)someMethod:(NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -L0-5,52 -c tests/config/meiss_codewidth_fix.cfg -f tests/input/oc/meiss_codewidth_fix2.m \nconfig_file = tests/config/meiss_codewidth_fix.cfg\noutput_file = null\nsource_file = tests/input/oc/meiss_codewidth_fix2.m\nsource_list = null\nprefix      = null\nsuffix      = null\nreplace     = 0\nno_backup   = 0\ndetect      = 0\nload_mem_file: 'tests/input/oc/meiss_codewidth_fix2.m' encoding looks like 0\nParsing: tests/input/oc/meiss_codewidth_fix2.m as language OC\n- (void)someMethod: (NSString *)aString\n{\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:&maxValue];\n\n  [self findstart:&startBarcode\n  end:&endBarcode\n  forLine:greenScalePixels\n  derivative:greenDerivative\n  centerAt:xAxisCenterPoint\n  min:&minValue\n  max:&maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:*maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n\n  [self findstart:&startBarcode end:&endBarcode forLine:greenScalePixels derivative:greenDerivative centerAt:xAxisCenterPoint min:&minValue max:**maxValue];\n}\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ uncrustify --show-config-doc\nSpecify the config file with '-c file' or set UNCRUSTIFY_CONFIG\nTry running with -h for usage information\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify -h\nUsage:\nuncrustify [options] [files ...]\n\nIf no input files are specified, the input is read from stdin\nIf reading from stdin, you should specify the language using -l\n\nIf -F is used or files are specified on the command line, the output filename is\n'prefix/filename' + suffix\n\nWhen reading from stdin or doing a single file via the '-f' option,\nthe output is dumped to stdout, unless redirected with -o FILE.\n\nErrors are always dumped to stderr\n\nThe '-f' and '-o' options may not be used with '-F', '--replace' or '--no-backup'.\nThe '--prefix' and '--suffix' options may not be used with '--replace' or '--no-backup'.\n\nBasic Options:\n -c CFG       : use the config file CFG\n -f FILE      : process the single file FILE (output to stdout, use with -o)\n -o FILE      : Redirect stdout to FILE\n -F FILE      : read files to process from FILE, one filename per line (- is stdin)\n files        : files to process (can be combined with -F)\n --suffix SFX : Append SFX to the output filename. The default is '.uncrustify'\n --prefix PFX : Prepend PFX to the output filename path.\n --replace    : replace source files (creates a backup)\n --no-backup  : replace files, no backup. Useful if files are under source control\n --mtime      : preserve mtime on replaced files\n -l           : language override: C, CPP, D, CS, JAVA, PAWN, OC, OC+\n -t           : load a file with types (usually not needed)\n -q           : quiet mode - no output on stderr (-L will override)\n --frag       : code fragment, assume the first line is indented correctly\n\nConfig/Help Options:\n -h -? --help --usage     : print this message and exit\n --version                : print the version and exit\n --show-config            : print out option documentation and exit\n --update-config          : Output a new config file. Use with -o FILE\n --update-config-with-doc : Output a new config file. Use with -o FILE\n --universalindent        : Output a config file for Universal Indent GUI\n --detect                 : detects the config from a source file. Use with '-f FILE'\n                            Detection is fairly limited.\n\nDebug Options:\n -p FILE      : dump debug info to a file\n -L SEV       : Set the log severity (see log_levels.h)\n -s           : Show the log severity in the logs\n --decode     : decode remaining args (chunk flags) and exit\n\nUsage Examples\ncat foo.d | uncrustify -q -c my.cfg -l d\nuncrustify -c my.cfg -f foo.d\nuncrustify -c my.cfg -f foo.d -L0-2,20-23,51\nuncrustify -c my.cfg -f foo.d -o foo.d\nuncrustify -c my.cfg foo.d\nuncrustify -c my.cfg --replace foo.d\nuncrustify -c my.cfg --no-backup foo.d\nuncrustify -c my.cfg --prefix=out -F files.txt\n\nNote: Use comments containing ' *INDENT-OFF*' and ' *INDENT-ON*' to disable\n      processing of parts of the source file.\n\nThere are currently 481 options and minimal documentation.\nTry UniversalIndentGUI and good luck.\n\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify --update-config-with-doc \nSpecify the config file with '-c file' or set UNCRUSTIFY_CONFIG\nTry running with -h for usage information\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ src/uncrustify --update-config-with-doc -c /dev/null\n# Uncrustify 0.60\n\n#\n# General options\n#\n\n# The type of line endings\nnewlines                                  = auto     # auto/lf/crlf/cr\n\n# The original size of tabs in the input\ninput_tab_size                            = 8        # number\n\n# The size of tabs in the output (only used if align_with_tabs=true)\noutput_tab_size                           = 8        # number\n\n# The ASCII value of the string escape char, usually 92 (\\) or 94 (^). (Pawn)\nstring_escape_char                        = 92       # number\n\n# Alternate string escape char for Pawn. Only works right before the quote char.\nstring_escape_char2                       = 0        # number\n\n# Allow interpreting '>=' and '>>=' as part of a template in 'void f(list<list<B>>=val);'.\n# If true (default), 'assert(x<0 && y>=3)' will be broken.\n# Improvements to template detection may make this option obsolete.\ntok_split_gte                             = false    # false/true\n\n# Control what to do with the UTF-8 BOM (recommend 'remove')\nutf8_bom                                  = ignore   # ignore/add/remove/force\n\n# If the file contains bytes with values between 128 and 255, but is not UTF-8, then output as UTF-8\nutf8_byte                                 = false    # false/true\n\n# Force the output encoding to UTF-8\nutf8_force                                = false    # false/true\n\n#\n# Indenting\n#\n\n# The number of columns to indent per level.\n# Usually 2, 3, 4, or 8.\nindent_columns                            = 8        # number\n\n# The continuation indent. If non-zero, this overrides the indent of '(' and '=' continuation indents.\n# For FreeBSD, this is set to 4. Negative value is absolute and not increased for each ( level\nindent_continue                           = 0        # number\n\n# How to use tabs when indenting code\n# 0=spaces only\n# 1=indent with tabs to brace level, align with spaces\n# 2=indent and align with tabs, using spaces when not on a tabstop\nindent_with_tabs                          = 1        # number\n\n# Comments that are not a brace level are indented with tabs on a tabstop.\n# Requires indent_with_tabs=2. If false, will use spaces.\nindent_cmt_with_tabs                      = false    # false/true\n\n# Whether to indent strings broken by '\\' so that they line up\nindent_align_string                       = false    # false/true\n\n# The number of spaces to indent multi-line XML strings.\n# Requires indent_align_string=True\nindent_xml_string                         = 0        # number\n\n# Spaces to indent '{' from level\nindent_brace                              = 0        # number\n\n# Whether braces are indented to the body level\nindent_braces                             = false    # false/true\n\n# Disabled indenting function braces if indent_braces is true\nindent_braces_no_func                     = false    # false/true\n\n# Disabled indenting class braces if indent_braces is true\nindent_braces_no_class                    = false    # false/true\n\n# Disabled indenting struct braces if indent_braces is true\nindent_braces_no_struct                   = false    # false/true\n\n# Indent based on the size of the brace parent, i.e. 'if' => 3 spaces, 'for' => 4 spaces, etc.\nindent_brace_parent                       = false    # false/true\n\n# Whether the 'namespace' body is indented\nindent_namespace                          = false    # false/true\n\n# The number of spaces to indent a namespace block\nindent_namespace_level                    = 0        # number\n\n# If the body of the namespace is longer than this number, it won't be indented.\n# Requires indent_namespace=true. Default=0 (no limit)\nindent_namespace_limit                    = 0        # number\n\n# Whether the 'extern \"C\"' body is indented\nindent_extern                             = false    # false/true\n\n# Whether the 'class' body is indented\nindent_class                              = false    # false/true\n\n# Whether to indent the stuff after a leading base class colon\nindent_class_colon                        = false    # false/true\n\n# Whether to indent the stuff after a leading class initializer colon\nindent_constr_colon                       = false    # false/true\n\n# Virtual indent from the ':' for member initializers. Default is 2\nindent_ctor_init_leading                  = 2        # number\n\n# Additional indenting for constructor initializer list\nindent_ctor_init                          = 0        # number\n\n# False=treat 'else\\nif' as 'else if' for indenting purposes\n# True=indent the 'if' one level\nindent_else_if                            = false    # false/true\n\n# Amount to indent variable declarations after a open brace. neg=relative, pos=absolute\nindent_var_def_blk                        = 0        # number\n\n# Indent continued variable declarations instead of aligning.\nindent_var_def_cont                       = false    # false/true\n\n# True:  force indentation of function definition to start in column 1\n# False: use the default behavior\nindent_func_def_force_col1                = false    # false/true\n\n# True:  indent continued function call parameters one indent level\n# False: align parameters under the open paren\nindent_func_call_param                    = false    # false/true\n\n# Same as indent_func_call_param, but for function defs\nindent_func_def_param                     = false    # false/true\n\n# Same as indent_func_call_param, but for function protos\nindent_func_proto_param                   = false    # false/true\n\n# Same as indent_func_call_param, but for class declarations\nindent_func_class_param                   = false    # false/true\n\n# Same as indent_func_call_param, but for class variable constructors\nindent_func_ctor_var_param                = false    # false/true\n\n# Same as indent_func_call_param, but for templates\nindent_template_param                     = false    # false/true\n\n# Double the indent for indent_func_xxx_param options\nindent_func_param_double                  = false    # false/true\n\n# Indentation column for standalone 'const' function decl/proto qualifier\nindent_func_const                         = 0        # number\n\n# Indentation column for standalone 'throw' function decl/proto qualifier\nindent_func_throw                         = 0        # number\n\n# The number of spaces to indent a continued '->' or '.'\n# Usually set to 0, 1, or indent_columns.\nindent_member                             = 0        # number\n\n# Spaces to indent single line ('//') comments on lines before code\nindent_sing_line_comments                 = 0        # number\n\n# If set, will indent trailing single line ('//') comments relative\n# to the code instead of trying to keep the same absolute column\nindent_relative_single_line_comments      = false    # false/true\n\n# Spaces to indent 'case' from 'switch'\n# Usually 0 or indent_columns.\nindent_switch_case                        = 0        # number\n\n# Spaces to shift the 'case' line, without affecting any other lines\n# Usually 0.\nindent_case_shift                         = 0        # number\n\n# Spaces to indent '{' from 'case'.\n# By default, the brace will appear under the 'c' in case.\n# Usually set to 0 or indent_columns.\nindent_case_brace                         = 0        # number\n\n# Whether to indent comments found in first column\nindent_col1_comment                       = false    # false/true\n\n# How to indent goto labels\n#  >0 : absolute column where 1 is the leftmost column\n#  <=0 : subtract from brace indent\nindent_label                              = 1        # number\n\n# Same as indent_label, but for access specifiers that are followed by a colon\nindent_access_spec                        = 1        # number\n\n# Indent the code after an access specifier by one level.\n# If set, this option forces 'indent_access_spec=0'\nindent_access_spec_body                   = false    # false/true\n\n# If an open paren is followed by a newline, indent the next line so that it lines up after the open paren (not recommended)\nindent_paren_nl                           = false    # false/true\n\n# Controls the indent of a close paren after a newline.\n# 0: Indent to body level\n# 1: Align under the open paren\n# 2: Indent to the brace level\nindent_paren_close                        = 0        # number\n\n# Controls the indent of a comma when inside a paren.If TRUE, aligns under the open paren\nindent_comma_paren                        = false    # false/true\n\n# Controls the indent of a BOOL operator when inside a paren.If TRUE, aligns under the open paren\nindent_bool_paren                         = false    # false/true\n\n# If 'indent_bool_paren' is true, controls the indent of the first expression. If TRUE, aligns the first expression to the following ones\nindent_first_bool_expr                    = false    # false/true\n\n# If an open square is followed by a newline, indent the next line so that it lines up after the open square (not recommended)\nindent_square_nl                          = false    # false/true\n\n# Don't change the relative indent of ESQL/C 'EXEC SQL' bodies\nindent_preserve_sql                       = false    # false/true\n\n# Align continued statements at the '='. Default=True\n# If FALSE or the '=' is followed by a newline, the next line is indent one tab.\nindent_align_assign                       = true     # false/true\n\n# Indent OC blocks at brace level instead of usual rules.\nindent_oc_block                           = false    # false/true\n\n# Indent OC blocks in a message relative to the parameter name.\n# 0=use indent_oc_block rules, 1+=spaces to indent\nindent_oc_block_msg                       = 0        # number\n\n# Minimum indent for subsequent parameters\nindent_oc_msg_colon                       = 0        # number\n\n# If true, prioritize aligning with initial colon (and stripping spaces from lines, if necessary).\n# Default is true.\nindent_oc_msg_prioritize_first_colon      = true     # false/true\n\n# If indent_oc_block_msg and this option are on, blocks will be indented the way that Xcode does by default (from keyword if the parameter is on its own line; otherwise, from the previous indentation level).\nindent_oc_block_msg_xcode_style           = false    # false/true\n\n# If indent_oc_block_msg and this option are on, blocks will be indented from where the brace is relative to a msg keyword.\nindent_oc_block_msg_from_keyword          = false    # false/true\n\n# If indent_oc_block_msg and this option are on, blocks will be indented from where the brace is relative to a msg colon.\nindent_oc_block_msg_from_colon            = false    # false/true\n\n# If indent_oc_block_msg and this option are on, blocks will be indented from where the block caret is.\nindent_oc_block_msg_from_caret            = false    # false/true\n\n# If indent_oc_block_msg and this option are on, blocks will be indented from where the brace is.\nindent_oc_block_msg_from_brace            = false    # false/true\n\n#\n# Spacing options\n#\n\n# Add or remove space around arithmetic operator '+', '-', '/', '*', etc\nsp_arith                                  = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment operator '=', '+=', etc\nsp_assign                                 = ignore   # ignore/add/remove/force\n\n# Add or remove space around '=' in C++11 lambda capture specifications. Overrides sp_assign\nsp_cpp_lambda_assign                      = ignore   # ignore/add/remove/force\n\n# Add or remove space after the capture specification in C++11 lambda.\nsp_cpp_lambda_paren                       = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment operator '=' in a prototype\nsp_assign_default                         = ignore   # ignore/add/remove/force\n\n# Add or remove space before assignment operator '=', '+=', etc. Overrides sp_assign.\nsp_before_assign                          = ignore   # ignore/add/remove/force\n\n# Add or remove space after assignment operator '=', '+=', etc. Overrides sp_assign.\nsp_after_assign                           = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment '=' in enum\nsp_enum_assign                            = ignore   # ignore/add/remove/force\n\n# Add or remove space before assignment '=' in enum. Overrides sp_enum_assign.\nsp_enum_before_assign                     = ignore   # ignore/add/remove/force\n\n# Add or remove space after assignment '=' in enum. Overrides sp_enum_assign.\nsp_enum_after_assign                      = ignore   # ignore/add/remove/force\n\n# Add or remove space around preprocessor '##' concatenation operator. Default=Add\nsp_pp_concat                              = add      # ignore/add/remove/force\n\n# Add or remove space after preprocessor '#' stringify operator. Also affects the '#@' charizing operator.\nsp_pp_stringify                           = ignore   # ignore/add/remove/force\n\n# Add or remove space before preprocessor '#' stringify operator as in '#define x(y) L#y'.\nsp_before_pp_stringify                    = ignore   # ignore/add/remove/force\n\n# Add or remove space around boolean operators '&&' and '||'\nsp_bool                                   = ignore   # ignore/add/remove/force\n\n# Add or remove space around compare operator '<', '>', '==', etc\nsp_compare                                = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '(' and ')'\nsp_inside_paren                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between nested parens: '((' vs ') )'\nsp_paren_paren                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between back-to-back parens: ')(' vs ') ('\nsp_cparen_oparen                          = ignore   # ignore/add/remove/force\n\n# Whether to balance spaces inside nested parens\nsp_balance_nested_parens                  = false    # false/true\n\n# Add or remove space between ')' and '{'\nsp_paren_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove space before pointer star '*'\nsp_before_ptr_star                        = ignore   # ignore/add/remove/force\n\n# Add or remove space before pointer star '*' that isn't followed by a variable name\n# If set to 'ignore', sp_before_ptr_star is used instead.\nsp_before_unnamed_ptr_star                = ignore   # ignore/add/remove/force\n\n# Add or remove space between pointer stars '*'\nsp_between_ptr_star                       = ignore   # ignore/add/remove/force\n\n# Add or remove space after pointer star '*', if followed by a word.\nsp_after_ptr_star                         = ignore   # ignore/add/remove/force\n\n# Add or remove space after a pointer star '*', if followed by a func proto/def.\nsp_after_ptr_star_func                    = ignore   # ignore/add/remove/force\n\n# Add or remove space after a pointer star '*', if followed by an open paren (function types).\nsp_ptr_star_paren                         = ignore   # ignore/add/remove/force\n\n# Add or remove space before a pointer star '*', if followed by a func proto/def.\nsp_before_ptr_star_func                   = ignore   # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&'\nsp_before_byref                           = ignore   # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&' that isn't followed by a variable name\n# If set to 'ignore', sp_before_byref is used instead.\nsp_before_unnamed_byref                   = ignore   # ignore/add/remove/force\n\n# Add or remove space after reference sign '&', if followed by a word.\nsp_after_byref                            = ignore   # ignore/add/remove/force\n\n# Add or remove space after a reference sign '&', if followed by a func proto/def.\nsp_after_byref_func                       = ignore   # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&', if followed by a func proto/def.\nsp_before_byref_func                      = ignore   # ignore/add/remove/force\n\n# Add or remove space between type and word. Default=Force\nsp_after_type                             = force    # ignore/add/remove/force\n\n# Add or remove space before the paren in the D constructs 'template Foo(' and 'class Foo('.\nsp_before_template_paren                  = ignore   # ignore/add/remove/force\n\n# Add or remove space in 'template <' vs 'template<'.\n# If set to ignore, sp_before_angle is used.\nsp_template_angle                         = ignore   # ignore/add/remove/force\n\n# Add or remove space before '<>'\nsp_before_angle                           = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '<' and '>'\nsp_inside_angle                           = ignore   # ignore/add/remove/force\n\n# Add or remove space after '<>'\nsp_after_angle                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between '<>' and '(' as found in 'new List<byte>();'\nsp_angle_paren                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between '<>' and a word as in 'List<byte> m;'\nsp_angle_word                             = ignore   # ignore/add/remove/force\n\n# Add or remove space between '>' and '>' in '>>' (template stuff C++/C# only). Default=Add\nsp_angle_shift                            = add      # ignore/add/remove/force\n\n# Permit removal of the space between '>>' in 'foo<bar<int> >' (C++11 only). Default=False\n# sp_angle_shift cannot remove the space without this option.\nsp_permit_cpp11_shift                     = false    # false/true\n\n# Add or remove space before '(' of 'if', 'for', 'switch', and 'while'\nsp_before_sparen                          = ignore   # ignore/add/remove/force\n\n# Add or remove space inside if-condition '(' and ')'\nsp_inside_sparen                          = ignore   # ignore/add/remove/force\n\n# Add or remove space before if-condition ')'. Overrides sp_inside_sparen.\nsp_inside_sparen_close                    = ignore   # ignore/add/remove/force\n\n# Add or remove space before if-condition '('. Overrides sp_inside_sparen.\nsp_inside_sparen_open                     = ignore   # ignore/add/remove/force\n\n# Add or remove space after ')' of 'if', 'for', 'switch', and 'while'\nsp_after_sparen                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and '{' of 'if', 'for', 'switch', and 'while'\nsp_sparen_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'invariant' and '(' in the D language.\nsp_invariant_paren                        = ignore   # ignore/add/remove/force\n\n# Add or remove space after the ')' in 'invariant (C) c' in the D language.\nsp_after_invariant_paren                  = ignore   # ignore/add/remove/force\n\n# Add or remove space before empty statement ';' on 'if', 'for' and 'while'\nsp_special_semi                           = ignore   # ignore/add/remove/force\n\n# Add or remove space before ';'. Default=Remove\nsp_before_semi                            = remove   # ignore/add/remove/force\n\n# Add or remove space before ';' in non-empty 'for' statements\nsp_before_semi_for                        = ignore   # ignore/add/remove/force\n\n# Add or remove space before a semicolon of an empty part of a for statement.\nsp_before_semi_for_empty                  = ignore   # ignore/add/remove/force\n\n# Add or remove space after ';', except when followed by a comment. Default=Add\nsp_after_semi                             = add      # ignore/add/remove/force\n\n# Add or remove space after ';' in non-empty 'for' statements. Default=Force\nsp_after_semi_for                         = force    # ignore/add/remove/force\n\n# Add or remove space after the final semicolon of an empty part of a for statement: for ( ; ; <here> ).\nsp_after_semi_for_empty                   = ignore   # ignore/add/remove/force\n\n# Add or remove space before '[' (except '[]')\nsp_before_square                          = ignore   # ignore/add/remove/force\n\n# Add or remove space before '[]'\nsp_before_squares                         = ignore   # ignore/add/remove/force\n\n# Add or remove space inside a non-empty '[' and ']'\nsp_inside_square                          = ignore   # ignore/add/remove/force\n\n# Add or remove space after ','\nsp_after_comma                            = ignore   # ignore/add/remove/force\n\n# Add or remove space before ','\nsp_before_comma                           = remove   # ignore/add/remove/force\n\n# Add or remove space between an open paren and comma: '(,' vs '( ,'\nsp_paren_comma                            = force    # ignore/add/remove/force\n\n# Add or remove space before the variadic '...' when preceded by a non-punctuator\nsp_before_ellipsis                        = ignore   # ignore/add/remove/force\n\n# Add or remove space after class ':'\nsp_after_class_colon                      = ignore   # ignore/add/remove/force\n\n# Add or remove space before class ':'\nsp_before_class_colon                     = ignore   # ignore/add/remove/force\n\n# Add or remove space after class constructor ':'\nsp_after_constr_colon                     = ignore   # ignore/add/remove/force\n\n# Add or remove space before class constructor ':'\nsp_before_constr_colon                    = ignore   # ignore/add/remove/force\n\n# Add or remove space before case ':'. Default=Remove\nsp_before_case_colon                      = remove   # ignore/add/remove/force\n\n# Add or remove space between 'operator' and operator sign\nsp_after_operator                         = ignore   # ignore/add/remove/force\n\n# Add or remove space between the operator symbol and the open paren, as in 'operator ++('\nsp_after_operator_sym                     = ignore   # ignore/add/remove/force\n\n# Add or remove space after C/D cast, i.e. 'cast(int)a' vs 'cast(int) a' or '(int)a' vs '(int) a'\nsp_after_cast                             = ignore   # ignore/add/remove/force\n\n# Add or remove spaces inside cast parens\nsp_inside_paren_cast                      = ignore   # ignore/add/remove/force\n\n# Add or remove space between the type and open paren in a C++ cast, i.e. 'int(exp)' vs 'int (exp)'\nsp_cpp_cast_paren                         = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'sizeof' and '('\nsp_sizeof_paren                           = ignore   # ignore/add/remove/force\n\n# Add or remove space after the tag keyword (Pawn)\nsp_after_tag                              = ignore   # ignore/add/remove/force\n\n# Add or remove space inside enum '{' and '}'\nsp_inside_braces_enum                     = ignore   # ignore/add/remove/force\n\n# Add or remove space inside struct/union '{' and '}'\nsp_inside_braces_struct                   = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '{' and '}'\nsp_inside_braces                          = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '{}'\nsp_inside_braces_empty                    = ignore   # ignore/add/remove/force\n\n# Add or remove space between return type and function name\n# A minimum of 1 is forced except for pointer return types.\nsp_type_func                              = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function declaration\nsp_func_proto_paren                       = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function definition\nsp_func_def_paren                         = ignore   # ignore/add/remove/force\n\n# Add or remove space inside empty function '()'\nsp_inside_fparens                         = ignore   # ignore/add/remove/force\n\n# Add or remove space inside function '(' and ')'\nsp_inside_fparen                          = ignore   # ignore/add/remove/force\n\n# Add or remove space inside the first parens in the function type: 'void (*x)(...)'\nsp_inside_tparen                          = ignore   # ignore/add/remove/force\n\n# Add or remove between the parens in the function type: 'void (*x)(...)'\nsp_after_tparen_close                     = ignore   # ignore/add/remove/force\n\n# Add or remove space between ']' and '(' when part of a function call.\nsp_square_fparen                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and '{' of function\nsp_fparen_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function calls\nsp_func_call_paren                        = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '()' on function calls without parameters.\n# If set to 'ignore' (the default), sp_func_call_paren is used.\nsp_func_call_paren_empty                  = ignore   # ignore/add/remove/force\n\n# Add or remove space between the user function name and '(' on function calls\n# You need to set a keyword to be a user function, like this: 'set func_call_user _' in the config file.\nsp_func_call_user_paren                   = ignore   # ignore/add/remove/force\n\n# Add or remove space between a constructor/destructor and the open paren\nsp_func_class_paren                       = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'return' and '('\nsp_return_paren                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between '__attribute__' and '('\nsp_attribute_paren                        = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'defined' and '(' in '#if defined (FOO)'\nsp_defined_paren                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'throw' and '(' in 'throw (something)'\nsp_throw_paren                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'throw' and anything other than '(' as in '@throw [...];'\nsp_after_throw                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'catch' and '(' in 'catch (something) { }'\n# If set to ignore, sp_before_sparen is used.\nsp_catch_paren                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'version' and '(' in 'version (something) { }' (D language)\n# If set to ignore, sp_before_sparen is used.\nsp_version_paren                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'scope' and '(' in 'scope (something) { }' (D language)\n# If set to ignore, sp_before_sparen is used.\nsp_scope_paren                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between macro and value\nsp_macro                                  = ignore   # ignore/add/remove/force\n\n# Add or remove space between macro function ')' and value\nsp_macro_func                             = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'else' and '{' if on the same line\nsp_else_brace                             = ignore   # ignore/add/remove/force\n\n# Add or remove space between '}' and 'else' if on the same line\nsp_brace_else                             = ignore   # ignore/add/remove/force\n\n# Add or remove space between '}' and the name of a typedef on the same line\nsp_brace_typedef                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'catch' and '{' if on the same line\nsp_catch_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between '}' and 'catch' if on the same line\nsp_brace_catch                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'finally' and '{' if on the same line\nsp_finally_brace                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between '}' and 'finally' if on the same line\nsp_brace_finally                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'try' and '{' if on the same line\nsp_try_brace                              = ignore   # ignore/add/remove/force\n\n# Add or remove space between get/set and '{' if on the same line\nsp_getset_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between a variable and '{' for C++ uniform initialization\nsp_word_brace                             = add      # ignore/add/remove/force\n\n# Add or remove space between a variable and '{' for a namespace\nsp_word_brace_ns                          = add      # ignore/add/remove/force\n\n# Add or remove space before the '::' operator\nsp_before_dc                              = ignore   # ignore/add/remove/force\n\n# Add or remove space after the '::' operator\nsp_after_dc                               = ignore   # ignore/add/remove/force\n\n# Add or remove around the D named array initializer ':' operator\nsp_d_array_colon                          = ignore   # ignore/add/remove/force\n\n# Add or remove space after the '!' (not) operator. Default=Remove\nsp_not                                    = remove   # ignore/add/remove/force\n\n# Add or remove space after the '~' (invert) operator. Default=Remove\nsp_inv                                    = remove   # ignore/add/remove/force\n\n# Add or remove space after the '&' (address-of) operator. Default=Remove\n# This does not affect the spacing after a '&' that is part of a type.\nsp_addr                                   = remove   # ignore/add/remove/force\n\n# Add or remove space around the '.' or '->' operators. Default=Remove\nsp_member                                 = remove   # ignore/add/remove/force\n\n# Add or remove space after the '*' (dereference) operator. Default=Remove\n# This does not affect the spacing after a '*' that is part of a type.\nsp_deref                                  = remove   # ignore/add/remove/force\n\n# Add or remove space after '+' or '-', as in 'x = -5' or 'y = +7'. Default=Remove\nsp_sign                                   = remove   # ignore/add/remove/force\n\n# Add or remove space before or after '++' and '--', as in '(--x)' or 'y++;'. Default=Remove\nsp_incdec                                 = remove   # ignore/add/remove/force\n\n# Add or remove space before a backslash-newline at the end of a line. Default=Add\nsp_before_nl_cont                         = add      # ignore/add/remove/force\n\n# Add or remove space after the scope '+' or '-', as in '-(void) foo;' or '+(int) bar;'\nsp_after_oc_scope                         = ignore   # ignore/add/remove/force\n\n# Add or remove space after the colon in message specs\n# '-(int) f:(int) x;' vs '-(int) f: (int) x;'\nsp_after_oc_colon                         = ignore   # ignore/add/remove/force\n\n# Add or remove space before the colon in message specs\n# '-(int) f: (int) x;' vs '-(int) f : (int) x;'\nsp_before_oc_colon                        = ignore   # ignore/add/remove/force\n\n# Add or remove space after the colon in immutable dictionary expression\n# 'NSDictionary *test = @{@\"foo\" :@\"bar\"};'\nsp_after_oc_dict_colon                    = ignore   # ignore/add/remove/force\n\n# Add or remove space before the colon in immutable dictionary expression\n# 'NSDictionary *test = @{@\"foo\" :@\"bar\"};'\nsp_before_oc_dict_colon                   = ignore   # ignore/add/remove/force\n\n# Add or remove space after the colon in message specs\n# '[object setValue:1];' vs '[object setValue: 1];'\nsp_after_send_oc_colon                    = ignore   # ignore/add/remove/force\n\n# Add or remove space before the colon in message specs\n# '[object setValue:1];' vs '[object setValue :1];'\nsp_before_send_oc_colon                   = ignore   # ignore/add/remove/force\n\n# Add or remove space after the (type) in message specs\n# '-(int)f: (int) x;' vs '-(int)f: (int)x;'\nsp_after_oc_type                          = ignore   # ignore/add/remove/force\n\n# Add or remove space after the first (type) in message specs\n# '-(int) f:(int)x;' vs '-(int)f:(int)x;'\nsp_after_oc_return_type                   = ignore   # ignore/add/remove/force\n\n# Add or remove space between '@selector' and '('\n# '@selector(msgName)' vs '@selector (msgName)'\n# Also applies to @protocol() constructs\nsp_after_oc_at_sel                        = ignore   # ignore/add/remove/force\n\n# Add or remove space between '@selector(x)' and the following word\n# '@selector(foo) a:' vs '@selector(foo)a:'\nsp_after_oc_at_sel_parens                 = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '@selector' parens\n# '@selector(foo)' vs '@selector( foo )'\n# Also applies to @protocol() constructs\nsp_inside_oc_at_sel_parens                = ignore   # ignore/add/remove/force\n\n# Add or remove space before a block pointer caret\n# '^int (int arg){...}' vs. ' ^int (int arg){...}'\nsp_before_oc_block_caret                  = ignore   # ignore/add/remove/force\n\n# Add or remove space after a block pointer caret\n# '^int (int arg){...}' vs. '^ int (int arg){...}'\nsp_after_oc_block_caret                   = ignore   # ignore/add/remove/force\n\n# Add or remove space between the receiver and selector in a message.\n# '[receiver selector ...]'\nsp_after_oc_msg_receiver                  = ignore   # ignore/add/remove/force\n\n# Add or remove space after @property.\nsp_after_oc_property                      = ignore   # ignore/add/remove/force\n\n# Add or remove space around the ':' in 'b ? t : f'\nsp_cond_colon                             = ignore   # ignore/add/remove/force\n\n# Add or remove space before the ':' in 'b ? t : f'. Overrides sp_cond_colon.\nsp_cond_colon_before                      = ignore   # ignore/add/remove/force\n\n# Add or remove space after the ':' in 'b ? t : f'. Overrides sp_cond_colon.\nsp_cond_colon_after                       = ignore   # ignore/add/remove/force\n\n# Add or remove space around the '?' in 'b ? t : f'\nsp_cond_question                          = ignore   # ignore/add/remove/force\n\n# Add or remove space before the '?' in 'b ? t : f'. Overrides sp_cond_question.\nsp_cond_question_before                   = ignore   # ignore/add/remove/force\n\n# Add or remove space after the '?' in 'b ? t : f'. Overrides sp_cond_question.\nsp_cond_question_after                    = ignore   # ignore/add/remove/force\n\n# In the abbreviated ternary form (a ?: b), add/remove space between ? and :.'. Overrides all other sp_cond_* options.\nsp_cond_ternary_short                     = ignore   # ignore/add/remove/force\n\n# Fix the spacing between 'case' and the label. Only 'ignore' and 'force' make sense here.\nsp_case_label                             = ignore   # ignore/add/remove/force\n\n# Control the space around the D '..' operator.\nsp_range                                  = ignore   # ignore/add/remove/force\n\n# Control the spacing after ':' in 'for (TYPE VAR : EXPR)' (Java)\nsp_after_for_colon                        = ignore   # ignore/add/remove/force\n\n# Control the spacing before ':' in 'for (TYPE VAR : EXPR)' (Java)\nsp_before_for_colon                       = ignore   # ignore/add/remove/force\n\n# Control the spacing in 'extern (C)' (D)\nsp_extern_paren                           = ignore   # ignore/add/remove/force\n\n# Control the space after the opening of a C++ comment '// A' vs '//A'\nsp_cmt_cpp_start                          = ignore   # ignore/add/remove/force\n\n# Controls the spaces between #else or #endif and a trailing comment\nsp_endif_cmt                              = ignore   # ignore/add/remove/force\n\n# Controls the spaces after 'new', 'delete', and 'delete[]'\nsp_after_new                              = ignore   # ignore/add/remove/force\n\n# Controls the spaces before a trailing or embedded comment\nsp_before_tr_emb_cmt                      = ignore   # ignore/add/remove/force\n\n# Number of spaces before a trailing or embedded comment\nsp_num_before_tr_emb_cmt                  = 0        # number\n\n# Control space between a Java annotation and the open paren.\nsp_annotation_paren                       = ignore   # ignore/add/remove/force\n\n#\n# Code alignment (not left column spaces/tabs)\n#\n\n# Whether to keep non-indenting tabs\nalign_keep_tabs                           = false    # false/true\n\n# Whether to use tabs for aligning\nalign_with_tabs                           = false    # false/true\n\n# Whether to bump out to the next tab when aligning\nalign_on_tabstop                          = false    # false/true\n\n# Whether to left-align numbers\nalign_number_left                         = false    # false/true\n\n# Whether to keep whitespace not required for alignment.\nalign_keep_extra_space                    = false    # false/true\n\n# Align variable definitions in prototypes and functions\nalign_func_params                         = false    # false/true\n\n# Align parameters in single-line functions that have the same name.\n# The function names must already be aligned with each other.\nalign_same_func_call_params               = false    # false/true\n\n# The span for aligning variable definitions (0=don't align)\nalign_var_def_span                        = 0        # number\n\n# How to align the star in variable definitions.\n#  0=Part of the type     'void *   foo;'\n#  1=Part of the variable 'void     *foo;'\n#  2=Dangling             'void    *foo;'\nalign_var_def_star_style                  = 0        # number\n\n# How to align the '&' in variable definitions.\n#  0=Part of the type\n#  1=Part of the variable\n#  2=Dangling\nalign_var_def_amp_style                   = 0        # number\n\n# The threshold for aligning variable definitions (0=no limit)\nalign_var_def_thresh                      = 0        # number\n\n# The gap for aligning variable definitions\nalign_var_def_gap                         = 0        # number\n\n# Whether to align the colon in struct bit fields\nalign_var_def_colon                       = false    # false/true\n\n# Whether to align any attribute after the variable name\nalign_var_def_attribute                   = false    # false/true\n\n# Whether to align inline struct/enum/union variable definitions\nalign_var_def_inline                      = false    # false/true\n\n# The span for aligning on '=' in assignments (0=don't align)\nalign_assign_span                         = 0        # number\n\n# The threshold for aligning on '=' in assignments (0=no limit)\nalign_assign_thresh                       = 0        # number\n\n# The span for aligning on '=' in enums (0=don't align)\nalign_enum_equ_span                       = 0        # number\n\n# The threshold for aligning on '=' in enums (0=no limit)\nalign_enum_equ_thresh                     = 0        # number\n\n# The span for aligning struct/union (0=don't align)\nalign_var_struct_span                     = 0        # number\n\n# The threshold for aligning struct/union member definitions (0=no limit)\nalign_var_struct_thresh                   = 0        # number\n\n# The gap for aligning struct/union member definitions\nalign_var_struct_gap                      = 0        # number\n\n# The span for aligning struct initializer values (0=don't align)\nalign_struct_init_span                    = 0        # number\n\n# The minimum space between the type and the synonym of a typedef\nalign_typedef_gap                         = 0        # number\n\n# The span for aligning single-line typedefs (0=don't align)\nalign_typedef_span                        = 0        # number\n\n# How to align typedef'd functions with other typedefs\n# 0: Don't mix them at all\n# 1: align the open paren with the types\n# 2: align the function type name with the other type names\nalign_typedef_func                        = 0        # number\n\n# Controls the positioning of the '*' in typedefs. Just try it.\n# 0: Align on typedef type, ignore '*'\n# 1: The '*' is part of type name: typedef int  *pint;\n# 2: The '*' is part of the type, but dangling: typedef int *pint;\nalign_typedef_star_style                  = 0        # number\n\n# Controls the positioning of the '&' in typedefs. Just try it.\n# 0: Align on typedef type, ignore '&'\n# 1: The '&' is part of type name: typedef int  &pint;\n# 2: The '&' is part of the type, but dangling: typedef int &pint;\nalign_typedef_amp_style                   = 0        # number\n\n# The span for aligning comments that end lines (0=don't align)\nalign_right_cmt_span                      = 0        # number\n\n# If aligning comments, mix with comments after '}' and #endif with less than 3 spaces before the comment\nalign_right_cmt_mix                       = false    # false/true\n\n# If a trailing comment is more than this number of columns away from the text it follows,\n# it will qualify for being aligned. This has to be > 0 to do anything.\nalign_right_cmt_gap                       = 0        # number\n\n# Align trailing comment at or beyond column N; 'pulls in' comments as a bonus side effect (0=ignore)\nalign_right_cmt_at_col                    = 0        # number\n\n# The span for aligning function prototypes (0=don't align)\nalign_func_proto_span                     = 0        # number\n\n# Minimum gap between the return type and the function name.\nalign_func_proto_gap                      = 0        # number\n\n# Align function protos on the 'operator' keyword instead of what follows\nalign_on_operator                         = false    # false/true\n\n# Whether to mix aligning prototype and variable declarations.\n# If true, align_var_def_XXX options are used instead of align_func_proto_XXX options.\nalign_mix_var_proto                       = false    # false/true\n\n# Align single-line functions with function prototypes, uses align_func_proto_span\nalign_single_line_func                    = false    # false/true\n\n# Aligning the open brace of single-line functions.\n# Requires align_single_line_func=true, uses align_func_proto_span\nalign_single_line_brace                   = false    # false/true\n\n# Gap for align_single_line_brace.\nalign_single_line_brace_gap               = 0        # number\n\n# The span for aligning ObjC msg spec (0=don't align)\nalign_oc_msg_spec_span                    = 0        # number\n\n# Whether to align macros wrapped with a backslash and a newline.\n# This will not work right if the macro contains a multi-line comment.\nalign_nl_cont                             = false    # false/true\n\n# # Align macro functions and variables together\nalign_pp_define_together                  = false    # false/true\n\n# The minimum space between label and value of a preprocessor define\nalign_pp_define_gap                       = 0        # number\n\n# The span for aligning on '#define' bodies (0=don't align)\nalign_pp_define_span                      = 0        # number\n\n# Align lines that start with '<<' with previous '<<'. Default=true\nalign_left_shift                          = true     # false/true\n\n# Span for aligning parameters in an Obj-C message call on the ':' (0=don't align)\nalign_oc_msg_colon_span                   = 0        # number\n\n# If true, always align with the first parameter, even if it is too short.\nalign_oc_msg_colon_first                  = false    # false/true\n\n# Aligning parameters in an Obj-C '+' or '-' declaration on the ':'\nalign_oc_decl_colon                       = false    # false/true\n\n#\n# Newline adding and removing options\n#\n\n# Whether to collapse empty blocks between '{' and '}'\nnl_collapse_empty_body                    = false    # false/true\n\n# Don't split one-line braced assignments - 'foo_t f = { 1, 2 };'\nnl_assign_leave_one_liners                = false    # false/true\n\n# Don't split one-line braced statements inside a class xx { } body\nnl_class_leave_one_liners                 = false    # false/true\n\n# Don't split one-line enums: 'enum foo { BAR = 15 };'\nnl_enum_leave_one_liners                  = false    # false/true\n\n# Don't split one-line get or set functions\nnl_getset_leave_one_liners                = false    # false/true\n\n# Don't split one-line function definitions - 'int foo() { return 0; }'\nnl_func_leave_one_liners                  = false    # false/true\n\n# Don't split one-line C++11 lambdas - '[]() { return 0; }'\nnl_cpp_lambda_leave_one_liners            = false    # false/true\n\n# Don't split one-line if/else statements - 'if(a) b++;'\nnl_if_leave_one_liners                    = false    # false/true\n\n# Don't split one-line OC messages\nnl_oc_msg_leave_one_liner                 = false    # false/true\n\n# Add or remove newlines at the start of the file\nnl_start_of_file                          = ignore   # ignore/add/remove/force\n\n# The number of newlines at the start of the file (only used if nl_start_of_file is 'add' or 'force'\nnl_start_of_file_min                      = 0        # number\n\n# Add or remove newline at the end of the file\nnl_end_of_file                            = ignore   # ignore/add/remove/force\n\n# The number of newlines at the end of the file (only used if nl_end_of_file is 'add' or 'force')\nnl_end_of_file_min                        = 0        # number\n\n# Add or remove newline between '=' and '{'\nnl_assign_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '=' and '[' (D only)\nnl_assign_square                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline after '= [' (D only). Will also affect the newline before the ']'\nnl_after_square_assign                    = ignore   # ignore/add/remove/force\n\n# The number of blank lines after a block of variable definitions at the top of a function body\n# 0 = No change (default)\nnl_func_var_def_blk                       = 0        # number\n\n# The number of newlines before a block of typedefs\n# 0 = No change (default)\nnl_typedef_blk_start                      = 0        # number\n\n# The number of newlines after a block of typedefs\n# 0 = No change (default)\nnl_typedef_blk_end                        = 0        # number\n\n# The maximum consecutive newlines within a block of typedefs\n# 0 = No change (default)\nnl_typedef_blk_in                         = 0        # number\n\n# The number of newlines before a block of variable definitions not at the top of a function body\n# 0 = No change (default)\nnl_var_def_blk_start                      = 0        # number\n\n# The number of newlines after a block of variable definitions not at the top of a function body\n# 0 = No change (default)\nnl_var_def_blk_end                        = 0        # number\n\n# The maximum consecutive newlines within a block of variable definitions\n# 0 = No change (default)\nnl_var_def_blk_in                         = 0        # number\n\n# Add or remove newline between a function call's ')' and '{', as in:\n# list_for_each(item, &list) { }\nnl_fcall_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'enum' and '{'\nnl_enum_brace                             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'struct and '{'\nnl_struct_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'union' and '{'\nnl_union_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'if' and '{'\nnl_if_brace                               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'else'\nnl_brace_else                             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'else if' and '{'\n# If set to ignore, nl_if_brace is used instead\nnl_elseif_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'else' and '{'\nnl_else_brace                             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'else' and 'if'\nnl_else_if                                = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'finally'\nnl_brace_finally                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'finally' and '{'\nnl_finally_brace                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'try' and '{'\nnl_try_brace                              = ignore   # ignore/add/remove/force\n\n# Add or remove newline between get/set and '{'\nnl_getset_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'for' and '{'\nnl_for_brace                              = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'catch' and '{'\nnl_catch_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'catch'\nnl_brace_catch                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and ']'\nnl_brace_square                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and ')' in a function invocation\nnl_brace_fparen                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'while' and '{'\nnl_while_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'scope (x)' and '{' (D)\nnl_scope_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'unittest' and '{' (D)\nnl_unittest_brace                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'version (x)' and '{' (D)\nnl_version_brace                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'using' and '{'\nnl_using_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between two open or close braces.\n# Due to general newline/brace handling, REMOVE may not work.\nnl_brace_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'do' and '{'\nnl_do_brace                               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'while' of 'do' statement\nnl_brace_while                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'switch' and '{'\nnl_switch_brace                           = ignore   # ignore/add/remove/force\n\n# Add a newline between ')' and '{' if the ')' is on a different line than the if/for/etc.\n# Overrides nl_for_brace, nl_if_brace, nl_switch_brace, nl_while_switch, and nl_catch_brace.\nnl_multi_line_cond                        = false    # false/true\n\n# Force a newline in a define after the macro name for multi-line defines.\nnl_multi_line_define                      = false    # false/true\n\n# Whether to put a newline before 'case' statement\nnl_before_case                            = false    # false/true\n\n# Add or remove newline between ')' and 'throw'\nnl_before_throw                           = ignore   # ignore/add/remove/force\n\n# Whether to put a newline after 'case' statement\nnl_after_case                             = false    # false/true\n\n# Add or remove a newline between a case ':' and '{'. Overrides nl_after_case.\nnl_case_colon_brace                       = ignore   # ignore/add/remove/force\n\n# Newline between namespace and {\nnl_namespace_brace                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'template<>' and whatever follows.\nnl_template_class                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'class' and '{'\nnl_class_brace                            = ignore   # ignore/add/remove/force\n\n# Add or remove newline after each ',' in the class base list\nnl_class_init_args                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline after each ',' in the constructor member initialization\nnl_constr_init_args                       = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name in a function definition\nnl_func_type_name                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name inside a class {}\n# Uses nl_func_type_name or nl_func_proto_type_name if set to ignore.\nnl_func_type_name_class                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between function scope and name in a definition\n# Controls the newline after '::' in 'void A::f() { }'\nnl_func_scope_name                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name in a prototype\nnl_func_proto_type_name                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between a function name and the opening '('\nnl_func_paren                             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between a function name and the opening '(' in the definition\nnl_func_def_paren                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline after '(' in a function declaration\nnl_func_decl_start                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline after '(' in a function definition\nnl_func_def_start                         = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_decl_start when there is only one parameter.\nnl_func_decl_start_single                 = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_def_start when there is only one parameter.\nnl_func_def_start_single                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline after each ',' in a function declaration\nnl_func_decl_args                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline after each ',' in a function definition\nnl_func_def_args                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline before the ')' in a function declaration\nnl_func_decl_end                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline before the ')' in a function definition\nnl_func_def_end                           = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_decl_end when there is only one parameter.\nnl_func_decl_end_single                   = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_def_end when there is only one parameter.\nnl_func_def_end_single                    = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '()' in a function declaration.\nnl_func_decl_empty                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '()' in a function definition.\nnl_func_def_empty                         = ignore   # ignore/add/remove/force\n\n# Whether to put each OC message parameter on a separate line\n# See nl_oc_msg_leave_one_liner\nnl_oc_msg_args                            = false    # false/true\n\n# Add or remove newline between function signature and '{'\nnl_fdef_brace                             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between C++11 lambda signature and '{'\nnl_cpp_ldef_brace                         = ignore   # ignore/add/remove/force\n\n# Add or remove a newline between the return keyword and return expression.\nnl_return_expr                            = ignore   # ignore/add/remove/force\n\n# Whether to put a newline after semicolons, except in 'for' statements\nnl_after_semicolon                        = false    # false/true\n\n# Whether to put a newline after brace open.\n# This also adds a newline before the matching brace close.\nnl_after_brace_open                       = false    # false/true\n\n# If nl_after_brace_open and nl_after_brace_open_cmt are true, a newline is\n# placed between the open brace and a trailing single-line comment.\nnl_after_brace_open_cmt                   = false    # false/true\n\n# Whether to put a newline after a virtual brace open with a non-empty body.\n# These occur in un-braced if/while/do/for statement bodies.\nnl_after_vbrace_open                      = false    # false/true\n\n# Whether to put a newline after a virtual brace open with an empty body.\n# These occur in un-braced if/while/do/for statement bodies.\nnl_after_vbrace_open_empty                = false    # false/true\n\n# Whether to put a newline after a brace close.\n# Does not apply if followed by a necessary ';'.\nnl_after_brace_close                      = false    # false/true\n\n# Whether to put a newline after a virtual brace close.\n# Would add a newline before return in: 'if (foo) a++; return;'\nnl_after_vbrace_close                     = false    # false/true\n\n# Control the newline between the close brace and 'b' in: 'struct { int a; } b;'\n# Affects enums, unions, and structures. If set to ignore, uses nl_after_brace_close\nnl_brace_struct_var                       = ignore   # ignore/add/remove/force\n\n# Whether to alter newlines in '#define' macros\nnl_define_macro                           = false    # false/true\n\n# Whether to not put blanks after '#ifxx', '#elxx', or before '#endif'\nnl_squeeze_ifdef                          = false    # false/true\n\n# Add or remove blank line before 'if'\nnl_before_if                              = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'if' statement\nnl_after_if                               = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'for'\nnl_before_for                             = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'for' statement\nnl_after_for                              = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'while'\nnl_before_while                           = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'while' statement\nnl_after_while                            = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'switch'\nnl_before_switch                          = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'switch' statement\nnl_after_switch                           = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'do'\nnl_before_do                              = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'do/while' statement\nnl_after_do                               = ignore   # ignore/add/remove/force\n\n# Whether to double-space commented-entries in struct/enum\nnl_ds_struct_enum_cmt                     = false    # false/true\n\n# Whether to double-space before the close brace of a struct/union/enum\n# (lower priority than 'eat_blanks_before_close_brace')\nnl_ds_struct_enum_close_brace             = false    # false/true\n\n# Add or remove a newline around a class colon.\n# Related to pos_class_colon, nl_class_init_args, and pos_class_comma.\nnl_class_colon                            = ignore   # ignore/add/remove/force\n\n# Add or remove a newline around a class constructor colon.\n# Related to pos_constr_colon, nl_constr_init_args, and pos_constr_comma.\nnl_constr_colon                           = ignore   # ignore/add/remove/force\n\n# Change simple unbraced if statements into a one-liner\n# 'if(b)\\n i++;' => 'if(b) i++;'\nnl_create_if_one_liner                    = false    # false/true\n\n# Change simple unbraced for statements into a one-liner\n# 'for (i=0;i<5;i++)\\n foo(i);' => 'for (i=0;i<5;i++) foo(i);'\nnl_create_for_one_liner                   = false    # false/true\n\n# Change simple unbraced while statements into a one-liner\n# 'while (i<5)\\n foo(i++);' => 'while (i<5) foo(i++);'\nnl_create_while_one_liner                 = false    # false/true\n\n#\n# Positioning options\n#\n\n# The position of arithmetic operators in wrapped expressions\npos_arith                                 = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of assignment in wrapped expressions.\n# Do not affect '=' followed by '{'\npos_assign                                = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of boolean operators in wrapped expressions\npos_bool                                  = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of comparison operators in wrapped expressions\npos_compare                               = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of conditional (b ? t : f) operators in wrapped expressions\npos_conditional                           = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of the comma in wrapped expressions\npos_comma                                 = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of the comma in the class base list\npos_class_comma                           = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of the comma in the constructor initialization list\npos_constr_comma                          = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of colons between class and base class list\npos_class_colon                           = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of colons between constructor and member initialization\npos_constr_colon                          = ignore   # ignore/join/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n#\n# Line Splitting options\n#\n\n# Try to limit code width to N number of columns\ncode_width                                = 0        # number\n\n# Whether to fully split long 'for' statements at semi-colons\nls_for_split_full                         = false    # false/true\n\n# Whether to fully split long function protos/calls at commas\nls_func_split_full                        = false    # false/true\n\n# Whether to split lines as close to code_width as possible and ignore some groupings\nls_code_width                             = false    # false/true\n\n#\n# Blank line options\n#\n\n# The maximum consecutive newlines\nnl_max                                    = 0        # number\n\n# The number of newlines after a function prototype, if followed by another function prototype\nnl_after_func_proto                       = 0        # number\n\n# The number of newlines after a function prototype, if not followed by another function prototype\nnl_after_func_proto_group                 = 0        # number\n\n# The number of newlines after '}' of a multi-line function body\nnl_after_func_body                        = 0        # number\n\n# The number of newlines after '}' of a multi-line function body in a class declaration\nnl_after_func_body_class                  = 0        # number\n\n# The number of newlines after '}' of a single line function body\nnl_after_func_body_one_liner              = 0        # number\n\n# The minimum number of newlines before a multi-line comment.\n# Doesn't apply if after a brace open or another multi-line comment.\nnl_before_block_comment                   = 0        # number\n\n# The minimum number of newlines before a single-line C comment.\n# Doesn't apply if after a brace open or other single-line C comments.\nnl_before_c_comment                       = 0        # number\n\n# The minimum number of newlines before a CPP comment.\n# Doesn't apply if after a brace open or other CPP comments.\nnl_before_cpp_comment                     = 0        # number\n\n# Whether to force a newline after a multi-line comment.\nnl_after_multiline_comment                = false    # false/true\n\n# The number of newlines after '}' or ';' of a struct/enum/union definition\nnl_after_struct                           = 0        # number\n\n# The number of newlines after '}' or ';' of a class definition\nnl_after_class                            = 0        # number\n\n# The number of newlines before a 'private:', 'public:', 'protected:', 'signals:', or 'slots:' label.\n# Will not change the newline count if after a brace open.\n# 0 = No change.\nnl_before_access_spec                     = 0        # number\n\n# The number of newlines after a 'private:', 'public:', 'protected:', 'signals:', or 'slots:' label.\n# 0 = No change.\nnl_after_access_spec                      = 0        # number\n\n# The number of newlines between a function def and the function comment.\n# 0 = No change.\nnl_comment_func_def                       = 0        # number\n\n# The number of newlines after a try-catch-finally block that isn't followed by a brace close.\n# 0 = No change.\nnl_after_try_catch_finally                = 0        # number\n\n# The number of newlines before and after a property, indexer or event decl.\n# 0 = No change.\nnl_around_cs_property                     = 0        # number\n\n# The number of newlines between the get/set/add/remove handlers in C#.\n# 0 = No change.\nnl_between_get_set                        = 0        # number\n\n# Add or remove newline between C# property and the '{'\nnl_property_brace                         = ignore   # ignore/add/remove/force\n\n# Whether to remove blank lines after '{'\neat_blanks_after_open_brace               = false    # false/true\n\n# Whether to remove blank lines before '}'\neat_blanks_before_close_brace             = false    # false/true\n\n# How aggressively to remove extra newlines not in preproc.\n# 0: No change\n# 1: Remove most newlines not handled by other config\n# 2: Remove all newlines and reformat completely by config\nnl_remove_extra_newlines                  = 0        # number\n\n# Whether to put a blank line before 'return' statements, unless after an open brace.\nnl_before_return                          = false    # false/true\n\n# Whether to put a blank line after 'return' statements, unless followed by a close brace.\nnl_after_return                           = false    # false/true\n\n# Whether to put a newline after a Java annotation statement.\n# Only affects annotations that are after a newline.\nnl_after_annotation                       = ignore   # ignore/add/remove/force\n\n# Controls the newline between two annotations.\nnl_between_annotation                     = ignore   # ignore/add/remove/force\n\n#\n# Code modifying options (non-whitespace)\n#\n\n# Add or remove braces on single-line 'do' statement\nmod_full_brace_do                         = ignore   # ignore/add/remove/force\n\n# Add or remove braces on single-line 'for' statement\nmod_full_brace_for                        = ignore   # ignore/add/remove/force\n\n# Add or remove braces on single-line function definitions. (Pawn)\nmod_full_brace_function                   = ignore   # ignore/add/remove/force\n\n# Add or remove braces on single-line 'if' statement. Will not remove the braces if they contain an 'else'.\nmod_full_brace_if                         = ignore   # ignore/add/remove/force\n\n# Make all if/elseif/else statements in a chain be braced or not. Overrides mod_full_brace_if.\n# If any must be braced, they are all braced.  If all can be unbraced, then the braces are removed.\nmod_full_brace_if_chain                   = false    # false/true\n\n# Don't remove braces around statements that span N newlines\nmod_full_brace_nl                         = 0        # number\n\n# Add or remove braces on single-line 'while' statement\nmod_full_brace_while                      = ignore   # ignore/add/remove/force\n\n# Add or remove braces on single-line 'using ()' statement\nmod_full_brace_using                      = ignore   # ignore/add/remove/force\n\n# Add or remove unnecessary paren on 'return' statement\nmod_paren_on_return                       = ignore   # ignore/add/remove/force\n\n# Whether to change optional semicolons to real semicolons\nmod_pawn_semicolon                        = false    # false/true\n\n# Add parens on 'while' and 'if' statement around bools\nmod_full_paren_if_bool                    = false    # false/true\n\n# Whether to remove superfluous semicolons\nmod_remove_extra_semicolon                = false    # false/true\n\n# If a function body exceeds the specified number of newlines and doesn't have a comment after\n# the close brace, a comment will be added.\nmod_add_long_function_closebrace_comment  = 0        # number\n\n# If a namespace body exceeds the specified number of newlines and doesn't have a comment after\n# the close brace, a comment will be added.\nmod_add_long_namespace_closebrace_comment = 0        # number\n\n# If a switch body exceeds the specified number of newlines and doesn't have a comment after\n# the close brace, a comment will be added.\nmod_add_long_switch_closebrace_comment    = 0        # number\n\n# If an #ifdef body exceeds the specified number of newlines and doesn't have a comment after\n# the #endif, a comment will be added.\nmod_add_long_ifdef_endif_comment          = 0        # number\n\n# If an #ifdef or #else body exceeds the specified number of newlines and doesn't have a comment after\n# the #else, a comment will be added.\nmod_add_long_ifdef_else_comment           = 0        # number\n\n# If TRUE, will sort consecutive single-line 'import' statements [Java, D]\nmod_sort_import                           = false    # false/true\n\n# If TRUE, will sort consecutive single-line 'using' statements [C#]\nmod_sort_using                            = false    # false/true\n\n# If TRUE, will sort consecutive single-line '#include' statements [C/C++] and '#import' statements [Obj-C]\n# This is generally a bad idea, as it may break your code.\nmod_sort_include                          = false    # false/true\n\n# If TRUE, it will move a 'break' that appears after a fully braced 'case' before the close brace.\nmod_move_case_break                       = false    # false/true\n\n# Will add or remove the braces around a fully braced case statement.\n# Will only remove the braces if there are no variable declarations in the block.\nmod_case_brace                            = ignore   # ignore/add/remove/force\n\n# If TRUE, it will remove a void 'return;' that appears as the last statement in a function.\nmod_remove_empty_return                   = false    # false/true\n\n#\n# Comment modifications\n#\n\n# Try to wrap comments at cmt_width columns\ncmt_width                                 = 0        # number\n\n# Set the comment reflow mode (default: 0)\n# 0: no reflowing (apart from the line wrapping due to cmt_width)\n# 1: no touching at all\n# 2: full reflow\ncmt_reflow_mode                           = 0        # number\n\n# If false, disable all multi-line comment changes, including cmt_width. keyword substitution, and leading chars.\n# Default is true.\ncmt_indent_multi                          = true     # false/true\n\n# Whether to group c-comments that look like they are in a block\ncmt_c_group                               = false    # false/true\n\n# Whether to put an empty '/*' on the first line of the combined c-comment\ncmt_c_nl_start                            = false    # false/true\n\n# Whether to put a newline before the closing '*/' of the combined c-comment\ncmt_c_nl_end                              = false    # false/true\n\n# Whether to group cpp-comments that look like they are in a block\ncmt_cpp_group                             = false    # false/true\n\n# Whether to put an empty '/*' on the first line of the combined cpp-comment\ncmt_cpp_nl_start                          = false    # false/true\n\n# Whether to put a newline before the closing '*/' of the combined cpp-comment\ncmt_cpp_nl_end                            = false    # false/true\n\n# Whether to change cpp-comments into c-comments\ncmt_cpp_to_c                              = false    # false/true\n\n# Whether to put a star on subsequent comment lines\ncmt_star_cont                             = false    # false/true\n\n# The number of spaces to insert at the start of subsequent comment lines\ncmt_sp_before_star_cont                   = 0        # number\n\n# The number of spaces to insert after the star on subsequent comment lines\ncmt_sp_after_star_cont                    = 0        # number\n\n# For multi-line comments with a '*' lead, remove leading spaces if the first and last lines of\n# the comment are the same length. Default=True\ncmt_multi_check_last                      = true     # false/true\n\n# The filename that contains text to insert at the head of a file if the file doesn't start with a C/C++ comment.\n# Will substitute $(filename) with the current file's name.\ncmt_insert_file_header                    = \"\"         # string\n\n# The filename that contains text to insert at the end of a file if the file doesn't end with a C/C++ comment.\n# Will substitute $(filename) with the current file's name.\ncmt_insert_file_footer                    = \"\"         # string\n\n# The filename that contains text to insert before a function implementation if the function isn't preceded with a C/C++ comment.\n# Will substitute $(function) with the function name and $(javaparam) with the javadoc @param and @return stuff.\n# Will also substitute $(fclass) with the class name: void CFoo::Bar() { ... }\ncmt_insert_func_header                    = \"\"         # string\n\n# The filename that contains text to insert before a class if the class isn't preceded with a C/C++ comment.\n# Will substitute $(class) with the class name.\ncmt_insert_class_header                   = \"\"         # string\n\n# The filename that contains text to insert before a Obj-C message specification if the method isn't preceded with a C/C++ comment.\n# Will substitute $(message) with the function name and $(javaparam) with the javadoc @param and @return stuff.\ncmt_insert_oc_msg_header                  = \"\"         # string\n\n# If a preprocessor is encountered when stepping backwards from a function name, then\n# this option decides whether the comment should be inserted.\n# Affects cmt_insert_oc_msg_header, cmt_insert_func_header and cmt_insert_class_header.\ncmt_insert_before_preproc                 = false    # false/true\n\n#\n# Preprocessor options\n#\n\n# Control indent of preprocessors inside #if blocks at brace level 0\npp_indent                                 = ignore   # ignore/add/remove/force\n\n# Whether to indent #if/#else/#endif at the brace level (true) or from column 1 (false)\npp_indent_at_level                        = false    # false/true\n\n# If pp_indent_at_level=false, specifies the number of columns to indent per level. Default=1.\npp_indent_count                           = 1        # number\n\n# Add or remove space after # based on pp_level of #if blocks\npp_space                                  = ignore   # ignore/add/remove/force\n\n# Sets the number of spaces added with pp_space\npp_space_count                            = 0        # number\n\n# The indent for #region and #endregion in C# and '#pragma region' in C/C++\npp_indent_region                          = 0        # number\n\n# Whether to indent the code between #region and #endregion\npp_region_indent_code                     = false    # false/true\n\n# If pp_indent_at_level=true, sets the indent for #if, #else, and #endif when not at file-level\npp_indent_if                              = 0        # number\n\n# Control whether to indent the code between #if, #else and #endif when not at file-level\npp_if_indent_code                         = false    # false/true\n\n# Whether to indent '#define' at the brace level (true) or from column 1 (false)\npp_define_at_level                        = false    # false/true\n\n# You can force a token to be a type with the 'type' option.\n# Example:\n# type myfoo1 myfoo2\n#\n# You can create custom macro-based indentation using macro-open,\n# macro-else and macro-close.\n# Example:\n# macro-open  BEGIN_TEMPLATE_MESSAGE_MAP\n# macro-open  BEGIN_MESSAGE_MAP\n# macro-close END_MESSAGE_MAP\n#\n# You can assign any keyword to any type with the set option.\n# set func_call_user _ N_\n#\n# The full syntax description of all custom definition config entries\n# is shown below:\n#\n# define custom tokens as:\n# - embed whitespace in token using '' escape character, or\n#   put token in quotes\n# - these: ' \" and ` are recognized as quote delimiters\n#\n# type token1 token2 token3 ...\n#             ^ optionally specify multiple tokens on a single line\n# define def_token output_token\n#                  ^ output_token is optional, then NULL is assumed\n# macro-open token\n# macro-close token\n# macro-else token\n# set id token1 token2 ...\n#               ^ optionally specify multiple tokens on a single line\n#     ^ id is one of the names in token_enum.h sans the CT_ prefix,\n#       e.g. PP_PRAGMA\n#\n# all tokens are separated by any mix of ',' commas, '=' equal signs\n# and whitespace (space, tab)\n#\n\nmark@odette::~/dev/OSX/uncrustify[feature/meiss-codewidth-fix+]\n$ \n",
			"settings":
			{
				"buffer_size": 203968,
				"line_ending": "Unix",
				"name": "Last login: Mon Jun  2 13:46:05 on ttys010"
			}
		},
		{
			"file": "debug.m",
			"settings":
			{
				"buffer_size": 410,
				"line_ending": "Unix",
				"name": "(lldb) fr v pc->type"
			}
		},
		{
			"file": "src/chunk_list.h",
			"settings":
			{
				"buffer_size": 8937,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/input/oc/meiss_codewidth_fix2.m",
			"settings":
			{
				"buffer_size": 899,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 181.0,
		"selected_items":
		[
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"r",
				"Package Control: Remove Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"mi",
				"Licence Snippet: MIT"
			],
			[
				"mit",
				"Licence Snippet: MIT"
			],
			[
				"Snippet: ",
				"Snippet: force-shell-syntaxt"
			],
			[
				"pack",
				"Preferences: Package Control Settings – Default"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 462.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"view.settings().get('syntax')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/mark/dev/OSX/uncrustify"
	],
	"file_history":
	[
		"/Users/mark/dev/OSX/uncrustify/src/width.cpp",
		"/Users/mark/bin/railsutil/config_xcode5/.gitignore",
		"/Users/mark/bin/railsutil/config/.gitignore",
		"/Users/mark/.gitignore_global",
		"/Users/mark/dev/OSX/uncrustify/.gitignore",
		"/Users/mark/dev/OSX/uncrustify/dump.out",
		"/Users/mark/.powconfig",
		"/Users/mark/dev/bunker5_website/index.html",
		"/Users/mark/dev/OSX/uncrustify/TESTING",
		"/Users/mark/dev/OSX/uncrustify/src/token_enum.h",
		"/Users/mark/dev/OSX/uncrustify/tests/config/template4.cfg",
		"/Users/mark/dev/OSX/uncrustify/working.txt",
		"/Users/mark/dev/OSX/uncrustify/tests/config/wessex.cfg",
		"/Users/mark/dev/OSX/uncrustify/tests/config/sp_word_brace_force.cfg",
		"/Users/mark/dev/OSX/uncrustify/tests/input/oc/meiss_codewidth_fix.m",
		"/Users/mark/dev/OSX/uncrustify/Makefile",
		"/Users/mark/dev/OSX/uncrustify/src/uncrustify_types.h",
		"/Users/mark/dev/OSX/uncrustify/tests/output/cpp/30924-sp_before_ellipsis.cpp",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/SublimeCodeIntel/Default (OSX).sublime-keymap",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-mousemap",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/SublimeCodeIntel/Default (OSX).sublime-mousemap",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/User/SublimeGDB.sublime-settings",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/Users/mark/dev/OSX/uncrustify/tests/config/meiss_codewidth_fix.cfg",
		"/Users/mark/dev/sublimetext-user-config.cfg",
		"/Users/mark/dev/IOS/PDFReader/.clang-format",
		"/Users/mark/.uncrustify/uncrustify.cfg",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/User/AlignTab.sublime-settings",
		"/Users/mark/dev/IOS/Xcodebump/.xcodebump.sh",
		"/Users/mark/dev/IOS/PDFReader/PDFReader.podspec",
		"/Users/mark/dev/IOS/Doxywrite/.doxywrite.sh",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/AlignTab/AlignTab.sublime-settings",
		"/Users/mark/dev/IOS/FAAComplete/.clang-format",
		"/Users/mark/dev/IOS/Doxywrite/Doxywrite.podspec",
		"/Users/mark/dev/workspace_43/zapd3-web/app/helpers/storage_helper.rb",
		"/Users/mark/dev/IOS/PDFReader/Sources/PDFReaderConfig.h",
		"/Users/mark/dev/IOS/PDFReader/LICENSE",
		"/Users/mark/dev/IOS/PDFReader/LICENSE.md",
		"/Users/mark/dev/IOS/PDFReader/.xcodebump.cfg",
		"/Users/mark/dev/Amazon_S3/mix_pub_dist/bucketpolicy_IAM.json",
		"/Users/mark/dev/Amazon_S3/mix_slush_bucket/bucketpolicy_IAM.json",
		"/Users/mark/dev/Amazon_S3/mix_slush_bucket/bucketpolicy.json",
		"/Users/mark/dev/Amazon_S3/mix_pub_dist/bucketpolicy.json",
		"/Users/mark/dev/Amazon_S3/mix_pub_dist/bucketpolicy",
		"/Users/mark/dev/Amazon_S3/mix_pub_dist/NOTES.txt",
		"/Users/mark/dev/Amazon_S3/mix_rpm_repo/bucketpolicy_IAM.json",
		"/Users/mark/dev/Amazon_S3/mix_pub_dist/web/robots.txt",
		"/Users/mark/dev/Amazon_S3/mix_rpm_repo/bucketpolicy.json",
		"/Users/mark/dev/Amazon_S3/mix_pub_dist/CORS.json",
		"/Users/mark/dev/Amazon_S3/mix_pub_dist/web/index.html",
		"/Users/mark/dev/Amazon_S3/mix_slush_bucket/web/index.html",
		"/Users/mark/dev/IOS/FAAComplete/.clang-format-llvm",
		"/Users/mark/dev/IOS/FAAComplete/.doxywrite-example.cfg",
		"/Users/mark/dev/IOS/FAAComplete/.gitignore",
		"/Users/mark/dev/IOS/PDFReader/.gitignore",
		"/Users/mark/dev/IOS/FAAComplete/Podfile",
		"/Users/mark/dev/IOS/PDFReader/Podfile",
		"/Users/mark/dev/IOS/PDFReader_TEST4/.xcodebump.cfg",
		"/Users/mark/dev/IOS/Xcodebump/Xcodebump.podspec",
		"/Users/mark/dev/IOS/Doxywrite/.doxywrite-wrapper.sh",
		"/Users/mark/dev/IOS/PDFReader_TEST4/.xcodebump.sh",
		"/Users/mark/dev/IOS/Xcodebump/.xcodebump-wrapper.sh",
		"/Users/mark/dev/IOS/PDFReader_TEST4/Podfile",
		"/Users/mark/.bashrc",
		"/Users/mark/dev/IOS/PDFReader_TEST4/Reader.podspec",
		"/Users/mark/dev/IOS/Xcodebump/.xcodebump-example.cfg",
		"/Users/mark/dev/IOS/Doxywrite/.doxywrite-example.cfg",
		"/Users/mark/dev/IOS/Xcodebump/README.md",
		"/Users/mark/dev/IOS/PDFReader/.doxywrite.cfg",
		"/Users/mark/dev/IOS/PDFReader_TEST3/ls",
		"/Users/mark/dev/IOS/PDFReader_TEST3/.doxywrite.cfg",
		"/Users/mark/dev/IOS/PDFReader_TEST3/Pods/Doxywrite/.doxywrite.sh",
		"/Users/mark/dev/IOS/Doxywrite/README.md",
		"/Users/mark/dev/IOS/PDFReader_TEST3/.doxywrite.sh",
		"/Users/mark/dev/IOS/PDFReader_TEST3/PDFReader_TEST3-Doxyfile.cfg",
		"/Users/mark/dev/IOS/Doxywrite/.gitignore",
		"/Users/mark/dev/IOS/PDFReader_TEST2/Podfile",
		"/Users/mark/dev/IOS/PDFReader_TEST2/Pods/Doxywrite/.doxywrite.sh",
		"/Users/mark/dev/IOS/PDFReader_TEST2/.doxytest.sh",
		"/Users/mark/dev/Amazon_EC2/mix_builder/config/conf_aws_base_centos_x86_64/local/etc/ec2_scripts/ec2-ldap-configure.sh",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/User/Context.sublime-menu",
		"/Users/mark/dev/IOS/Doxywrite/.doxywrite.podspec",
		"/Users/mark/dev/IOS/Doxywrite/.doxywrite.cfg",
		"/Users/mark/dev/IOS/PDFReader_TEST/.doxywrite.cfg",
		"/Users/mark/dev/IOS/test6.sh",
		"/tmp/TEST/PDFReader-Doxyfile.cfg",
		"/Users/mark/dev/IOS/test5.sh",
		"/Users/mark/dev/IOS/Xcodebump/.xcodebump.cfg",
		"/Users/mark/dev/IOS/FAAComplete/.xcodebump.sh",
		"/Users/mark/dev/IOS/FAAComplete/.doxywrite.cfg",
		"/Users/mark/dev/IOS/FAAComplete/.doxywrite.sh",
		"/Users/mark/dev/IOS/FAAComplete/.xcodebump.cfg",
		"/Users/mark/dev/RoR_Tut4/sample_app/jenkins/rails_prep.sh",
		"/Users/mark/dev/Amazon_EC2/mix_builder/config/conf_aws_base_centos_x86_64/local/etc/ec2_scripts/ec2-exec-hardening.sh",
		"/Users/mark/dev/IOS/test3.sh",
		"/Users/mark/dev/IOS/test2.sh",
		"/Users/mark/dev/IOS/test.podspec",
		"/Users/mark/dev/IOS/test4.sh",
		"/Users/mark/dev/IOS/PDFReader/Reader-Info.plist",
		"/Users/mark/dev/IOS/PDFReader_TEST/Reader-Info.plist",
		"/Users/mark/dev/IOS/PDFReader_TEST/.xcodebump.cfg",
		"/Users/mark/dev/IOS/PDFReader/Reader.podspec",
		"/Users/mark/dev/IOS/PDFReader/Podspec",
		"/Users/mark/dev/Amazon_EC2/mix_builder/config/conf_aws_base_centos_x86_64/local/etc/ec2_scripts/ec2-set-hostname.sh",
		"/Users/mark/dev/IOS/Xcodebump/.xcodebump",
		"/Users/mark/dev/IOS/PDFReader/.xcodebump",
		"/Users/mark/dev/IOS/PDFReader/test.sh",
		"/Users/mark/dev/IOS/PDFReader/.doxywrite",
		"/Users/mark/dev/IOS/PDFReader/.appledocg",
		"/Users/mark/dev/IOS/PDFReader/.appledocg-test",
		"/Users/mark/Library/Application Support/Sublime Text 3/Packages/User/force-shell-syntaxt.sublime-snippet",
		"/Users/mark/dev/Amazon_EC2/mix_builder/config/conf_aws_base_centos_x86_64/etc/nslcd.conf",
		"/Users/mark/bin/railsutil/config_xcode5/.appledocg",
		"/Users/mark/dev/RoR_Tut4/sample_app/spec/support/utilities.rb",
		"/Users/mark/dev/RoR_Tut4/sample_app/app/views/layouts/_header.html.erb",
		"/Users/mark/dev/RoR_Tut4/sample_app/lib/tasks/sample_data.rake",
		"/Users/mark/dev/RoR_Tut4/sample_app/app/controllers/sessions_controller.rb",
		"/Users/mark/dev/RoR_Tut4/sample_app/db/migrate/20140408233631_add_admin_to_users.rb",
		"/Users/mark/dev/RoR_Tut4/sample_app/app/views/users/_user.html.erb",
		"/Users/mark/dev/RoR_Tut4/sample_app/spec/factories.rb",
		"/Users/mark/dev/RoR_Tut4/sample_app/app/controllers/static_pages_controller.rb",
		"/Users/mark/dev/RoR_Tut4/sample_app/app/controllers/users_controller.rb",
		"/Users/mark/dev/RoR_Tut4/sample_app/app/controllers/application_controller.rb",
		"/Users/mark/dev/RoR_Tut4/sample_app/app/views/static_pages/contact.html.erb",
		"/Users/mark/dev/RoR_Tut4/sample_app/config.ru"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 91.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"oc_",
			"cw_entry",
			"chunk_is_token",
			"CT_ADDR",
			"colon",
			"development",
			"try_split_here",
			"CT_OC_MSG_NAME",
			"BLOCK",
			"PCF_IN_OC",
			"BLOCK",
			"PCF_IN_OC",
			"PCF_IN_OC_BLOCK",
			"caret",
			"pointer",
			"'*'",
			"CT_ADDR",
			"token:",
			"LSPLIT",
			"LOG_FMT",
			"log",
			"logs",
			"logging",
			"logs",
			"debug",
			"opt",
			"debug",
			"CT_ADDR",
			"OC_MSG",
			"split_line(",
			"CT_ADDR",
			"ADDR",
			"chunk_is_comment",
			"CT_SPACE",
			"unc_text",
			"struct chunk_t",
			"chunk_t",
			"ctrl",
			"chunk_t",
			"chunt_t",
			"chunk_t",
			"code_width",
			"space",
			"ace",
			"Property",
			"pointer",
			"docset",
			"-ne 0",
			"-nee 0",
			"Indent",
			"Xcodebump",
			"xcodebump",
			"INPUT",
			"INCLUDE",
			"PATH_SEARCH",
			"INCLUDE",
			"Reader",
			"PROJECT_NAME",
			"TARGETNAME",
			"empty",
			"_co",
			"PATH_CONFIG",
			"PATH_SEARCH",
			"cleanString",
			"local",
			"config",
			"iSPathROot",
			"Aborting",
			"Abo",
			"PATH_SEARCH",
			"PATH_OUTPUT",
			"PATH_OUT",
			"PATH_SED",
			"Creating Doxygen temp output directory",
			"isPathWrite",
			"isPathWR",
			"isPath",
			"doxygen",
			"PATH_SEARCH",
			"PATH_ROOT",
			"PATH_OUTPUT",
			"iSSemVer",
			"trailing",
			"slash",
			"dire",
			"!!",
			"-w",
			"-r",
			"Checking for",
			"promptConfirm",
			"isNumber",
			"PATH_GREP",
			"isNumber",
			"grep",
			"isNumber",
			"PATH_TEMP",
			"-w",
			"-d",
			"HAVE_DOT",
			"DOXYGEN_DOCSET_BUNDLE_ID",
			"prompt",
			"config",
			"cp",
			"make",
			"sed",
			"mkdir",
			"DOXYGEN_PATH",
			"null",
			"null/",
			"^INPUT",
			"INPUT",
			"Reader",
			"INPUT",
			"promote",
			"clean",
			"semverToArray",
			"*",
			"usage",
			"buildNumber",
			"BuildNumber",
			"Buildnum",
			"grep",
			"sed",
			"GIT_CURRENT_BRANCH_ESC",
			"PATH_GREP",
			"grep",
			"TARGETNAME",
			"TARGET"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			".doxywrite.cfg",
			"doxywrite.cfg"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/token_enum.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12088,
						"regions":
						{
						},
						"selection":
						[
							[
								4032,
								4037
							]
						],
						"settings":
						{
							"function_name_status_row": 110,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1172.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tests/config/meiss_codewidth_fix.cfg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5008,
						"regions":
						{
						},
						"selection":
						[
							[
								4623,
								4623
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"function_name_status_row": 93,
							"sublime_auto_complete": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 424.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 203968,
						"regions":
						{
						},
						"selection":
						[
							[
								158967,
								158989
							]
						],
						"settings":
						{
							"auto_name": "Last login: Mon Jun  2 13:46:05 on ttys010",
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"function_name_status_row": 3978,
							"sublime_auto_complete": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 55169.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "debug.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 410,
						"regions":
						{
						},
						"selection":
						[
							[
								104,
								115
							]
						],
						"settings":
						{
							"auto_name": "(lldb) fr v pc->type",
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"function_name_status_row": 4,
							"sublime_auto_complete": true,
							"syntax": "Packages/Objective-C/Objective-C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/chunk_list.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8937,
						"regions":
						{
						},
						"selection":
						[
							[
								4561,
								4566
							]
						],
						"settings":
						{
							"function_name_status_row": 10,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1626.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "tests/input/oc/meiss_codewidth_fix2.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 899,
						"regions":
						{
						},
						"selection":
						[
							[
								885,
								885
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"function_name_status_row": 15,
							"sublime_auto_complete": true,
							"syntax": "Packages/Objective-C/Objective-C++.tmLanguage"
						},
						"translation.x": 151.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 128.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "uncrustify.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"meiss",
				"tests/config/meiss_codewidth_fix.cfg"
			],
			[
				"uth",
				"spec/requests/authentication_pages_spec.rb"
			],
			[
				"_user",
				"app/views/users/_user.html.erb"
			],
			[
				"fac",
				"spec/factories.rb"
			],
			[
				"sample",
				"lib/tasks/sample_data.rake"
			],
			[
				"user_",
				"spec/models/user_spec.rb"
			],
			[
				"contr",
				"app/controllers/users_controller.rb"
			],
			[
				"inde",
				"app/views/users/index.html.erb"
			],
			[
				"gemfile",
				"Gemfile"
			],
			[
				"gem",
				"Gemfile"
			],
			[
				"au",
				"spec/requests/authentication_pages_spec.rb"
			],
			[
				"head",
				"app/views/layouts/_header.html.erb"
			],
			[
				"cus",
				"app/assets/stylesheets/custom.css.scss"
			],
			[
				"custom",
				"app/assets/stylesheets/custom.css.scss"
			],
			[
				"sess",
				"app/controllers/sessions_controller.rb"
			],
			[
				"utili",
				"spec/support/utilities.rb"
			],
			[
				"auth",
				"spec/requests/authentication_pages_spec.rb"
			],
			[
				"route",
				"config/routes.rb"
			],
			[
				"users_c",
				"app/controllers/users_controller.rb"
			],
			[
				"user_p",
				"spec/requests/user_pages_spec.rb"
			],
			[
				"sesion",
				"app/helpers/sessions_helper.rb"
			],
			[
				"user",
				"app/controllers/users_controller.rb"
			],
			[
				"user_pages",
				"spec/requests/user_pages_spec.rb"
			],
			[
				"appli",
				"app/assets/javascripts/application.js"
			],
			[
				"_hea",
				"app/views/layouts/_header.html.erb"
			],
			[
				"application_t",
				"app/controllers/application_controller.rb"
			],
			[
				"new.",
				"app/views/sessions/new.html.erb"
			],
			[
				"session",
				"app/controllers/sessions_controller.rb"
			],
			[
				"routes",
				"config/routes.rb"
			],
			[
				"application.",
				"app/views/layouts/application.html.erb"
			],
			[
				"appliati",
				"config/application.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 259.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
